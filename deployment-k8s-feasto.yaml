apiVersion: apps/v1
kind: Deployment
metadata:
  name: feasto-backend-security
spec:
  replicas: 3
  selector:
    matchLabels:
      app: feasto-backend-security
  template:
    metadata:
      labels:
        app: feasto-backend-security
    spec:
      containers:
        - name: feasto-backend-security
          image: 440744253004.dkr.ecr.eu-north-1.amazonaws.com/feasto-backend-security:latest
          ports:
            - containerPort: 8083
          imagePullPolicy: IfNotPresent
          env:
            - name: SPRING_DATASOURCE_URL
              value: "jdbc:postgresql://postgres-service:5432/security_service"
            - name: SPRING_DATASOURCE_USERNAME
              value: "postgres"
            - name: SPRING_DATASOURCE_PASSWORD
              value: "password"
            - name: EUREKA_CLIENT_SERVICEURL_DEFAULTZONE
              value: "http://discovery-service:8761/eureka"
      restartPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  name: feasto-backend-service
spec:
  selector:
    app: feasto-backend
  ports:
    - protocol: TCP
      port: 83
      targetPort: 8080
  type: LoadBalancer

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:latest
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              value: "postgres"
            - name: POSTGRES_PASSWORD
              value: "password"
            - name: PGDATA
              value: "/var/lib/postgresql/data/pgdata"
          volumeMounts:
            - name: init-script
              mountPath: /docker-entrypoint-initdb.d/
              readOnly: true
            - name: postgres-data
              mountPath: /var/lib/postgresql/data

          livenessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - postgres
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3

          readinessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - postgres
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 5
            failureThreshold: 3
      volumes:
        - name: init-script
          configMap:
            name: postgres-init-script
        - name: postgres-data
          persistentVolumeClaim:
            claimName: postgres-pvc


---
# Service dla Postgres
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
