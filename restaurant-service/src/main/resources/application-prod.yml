spring:
  datasource:
    url: jdbc:postgresql://postgres:5432/restaurant_service
    username: postgres
    password: password
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect


  kafka:
    consumer:
      bootstrap-servers: kafka-1:19092,kafka-2:19093,kafka-3:19094
      group-id: restaurantGroup
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      bootstrap-servers: kafka-1:19092,kafka-2:19093,kafka-3:19094
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

logging:
  file:
    name: /Users/jakubsokol/feasto-app-main/feasto-backend/logs/elk-stack.log

eureka:
  client:
    service-url:
      defaultZone: http://discovery-server:8761/eureka

environment:
  name: DOCKER

application:
  urls:
    user-service: http://api-gateway:8762/api/security/user
    restaurant-index: restaurants
    order-service: http://api-gateway:8762/api/order