2024-11-17T11:11:20.208+01:00  INFO 28029 --- [restaurant-service] [main] org.restaurant.RestaurantApplication     : Starting RestaurantApplication using Java 21.0.3 with PID 28029 (/Users/jakubsokol/feasto-app-main/feasto-backend/restaurant/target/classes started by jakubsokol in /Users/jakubsokol/feasto-app-main/feasto-backend)
2024-11-17T11:11:20.221+01:00  INFO 28029 --- [restaurant-service] [main] org.restaurant.RestaurantApplication     : No active profile set, falling back to 1 default profile: "default"
2024-11-17T11:11:21.603+01:00  INFO 28029 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-17T11:11:21.605+01:00  INFO 28029 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2024-11-17T11:11:21.639+01:00  INFO 28029 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.LocationRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-11-17T11:11:21.640+01:00  INFO 28029 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.MenuItemRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-11-17T11:11:21.641+01:00  INFO 28029 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.RatingRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-11-17T11:11:21.641+01:00  INFO 28029 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.RestaurantRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-11-17T11:11:21.642+01:00  INFO 28029 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.UserFavoriteRestaurantRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-11-17T11:11:21.710+01:00  INFO 28029 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 103 ms. Found 1 Elasticsearch repository interface.
2024-11-17T11:11:21.718+01:00  INFO 28029 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-17T11:11:21.719+01:00  INFO 28029 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2024-11-17T11:11:21.723+01:00  INFO 28029 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.LocationRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-11-17T11:11:21.725+01:00  INFO 28029 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.MenuItemRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-11-17T11:11:21.725+01:00  INFO 28029 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.RatingRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-11-17T11:11:21.725+01:00  INFO 28029 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.RestaurantRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-11-17T11:11:21.725+01:00  INFO 28029 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.UserFavoriteRestaurantRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-11-17T11:11:21.727+01:00  INFO 28029 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 8 ms. Found 0 Reactive Elasticsearch repository interfaces.
2024-11-17T11:11:21.733+01:00  INFO 28029 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-17T11:11:21.734+01:00  INFO 28029 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-17T11:11:21.752+01:00  INFO 28029 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.elasticsearch.ElasticRestaurantRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-11-17T11:11:21.764+01:00  INFO 28029 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 29 ms. Found 5 JPA repository interfaces.
2024-11-17T11:11:22.178+01:00  INFO 28029 --- [restaurant-service] [main] o.s.cloud.context.scope.GenericScope     : BeanFactory id=d5016c9d-c668-36f7-8045-781a81ac760a
2024-11-17T11:11:22.810+01:00  WARN 28029 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-11-17T11:11:22.817+01:00  WARN 28029 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:11:22.829+01:00  WARN 28029 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:11:22.839+01:00  WARN 28029 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:11:22.845+01:00  WARN 28029 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:11:22.847+01:00  WARN 28029 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x00000001205958c0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:11:22.855+01:00  WARN 28029 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:11:22.871+01:00  WARN 28029 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:11:22.882+01:00  WARN 28029 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:11:22.886+01:00  WARN 28029 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:11:22.889+01:00  WARN 28029 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:11:22.890+01:00  WARN 28029 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:11:22.901+01:00  WARN 28029 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:11:22.910+01:00  WARN 28029 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:11:22.914+01:00  WARN 28029 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:11:22.916+01:00  WARN 28029 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:11:22.919+01:00  WARN 28029 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:11:22.921+01:00  WARN 28029 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:11:22.928+01:00  WARN 28029 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancedRetryFactory' of type [org.springframework.cloud.loadbalancer.blocking.retry.BlockingLoadBalancedRetryFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:11:22.933+01:00  WARN 28029 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:11:22.939+01:00  WARN 28029 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-11-17T11:11:22.941+01:00  WARN 28029 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:11:22.942+01:00  WARN 28029 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:11:23.199+01:00  INFO 28029 --- [restaurant-service] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-11-17T11:11:23.209+01:00  INFO 28029 --- [restaurant-service] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-11-17T11:11:23.210+01:00  INFO 28029 --- [restaurant-service] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.18]
2024-11-17T11:11:23.253+01:00  INFO 28029 --- [restaurant-service] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-11-17T11:11:23.254+01:00  INFO 28029 --- [restaurant-service] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2965 ms
2024-11-17T11:11:23.721+01:00  INFO 28029 --- [restaurant-service] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-17T11:11:23.762+01:00  INFO 28029 --- [restaurant-service] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.4.1.Final
2024-11-17T11:11:23.778+01:00  INFO 28029 --- [restaurant-service] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-11-17T11:11:23.887+01:00  INFO 28029 --- [restaurant-service] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-11-17T11:11:23.900+01:00  INFO 28029 --- [restaurant-service] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-11-17T11:11:24.039+01:00  INFO 28029 --- [restaurant-service] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1f251bf1
2024-11-17T11:11:24.040+01:00  INFO 28029 --- [restaurant-service] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-11-17T11:11:24.081+01:00  WARN 28029 --- [restaurant-service] [main] org.hibernate.orm.deprecation            : HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-11-17T11:11:25.060+01:00  INFO 28029 --- [restaurant-service] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-11-17T11:11:25.205+01:00  INFO 28029 --- [restaurant-service] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-11-17T11:11:26.189+01:00  WARN 28029 --- [restaurant-service] [main] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'restaurantController' defined in file [/Users/jakubsokol/feasto-app-main/feasto-backend/restaurant/target/classes/org/restaurant/controller/RestaurantController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'restaurantService' defined in file [/Users/jakubsokol/feasto-app-main/feasto-backend/restaurant/target/classes/org/restaurant/service/RestaurantService.class]: Unsatisfied dependency expressed through constructor parameter 1: Error creating bean with name 'elasticRestaurantRepository' defined in org.restaurant.repository.elasticsearch.ElasticRestaurantRepository defined in @EnableElasticsearchRepositories declared on ElasticsearchRepositoriesRegistrar.EnableElasticsearchRepositoriesConfiguration: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository]: Constructor threw exception
2024-11-17T11:11:26.191+01:00  INFO 28029 --- [restaurant-service] [main] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-11-17T11:11:26.192+01:00  INFO 28029 --- [restaurant-service] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-11-17T11:11:26.194+01:00  INFO 28029 --- [restaurant-service] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-11-17T11:11:26.196+01:00  INFO 28029 --- [restaurant-service] [main] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2024-11-17T11:11:26.214+01:00  INFO 28029 --- [restaurant-service] [main] .s.b.a.l.ConditionEvaluationReportLogger : 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-11-17T11:11:26.224+01:00 ERROR 28029 --- [restaurant-service] [main] o.s.boot.SpringApplication               : Application run failed

org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'restaurantController' defined in file [/Users/jakubsokol/feasto-app-main/feasto-backend/restaurant/target/classes/org/restaurant/controller/RestaurantController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'restaurantService' defined in file [/Users/jakubsokol/feasto-app-main/feasto-backend/restaurant/target/classes/org/restaurant/service/RestaurantService.class]: Unsatisfied dependency expressed through constructor parameter 1: Error creating bean with name 'elasticRestaurantRepository' defined in org.restaurant.repository.elasticsearch.ElasticRestaurantRepository defined in @EnableElasticsearchRepositories declared on ElasticsearchRepositoriesRegistrar.EnableElasticsearchRepositoriesConfiguration: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository]: Constructor threw exception
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:798) ~[spring-beans-6.1.3.jar:6.1.3]
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237) ~[spring-beans-6.1.3.jar:6.1.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354) ~[spring-beans-6.1.3.jar:6.1.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191) ~[spring-beans-6.1.3.jar:6.1.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561) ~[spring-beans-6.1.3.jar:6.1.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521) ~[spring-beans-6.1.3.jar:6.1.3]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325) ~[spring-beans-6.1.3.jar:6.1.3]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.3.jar:6.1.3]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323) ~[spring-beans-6.1.3.jar:6.1.3]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-6.1.3.jar:6.1.3]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975) ~[spring-beans-6.1.3.jar:6.1.3]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:959) ~[spring-context-6.1.3.jar:6.1.3]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624) ~[spring-context-6.1.3.jar:6.1.3]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) ~[spring-boot-3.2.2.jar:3.2.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) ~[spring-boot-3.2.2.jar:3.2.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) ~[spring-boot-3.2.2.jar:3.2.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334) ~[spring-boot-3.2.2.jar:3.2.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354) ~[spring-boot-3.2.2.jar:3.2.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343) ~[spring-boot-3.2.2.jar:3.2.2]
	at org.restaurant.RestaurantApplication.main(RestaurantApplication.java:22) ~[classes/:na]
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'restaurantService' defined in file [/Users/jakubsokol/feasto-app-main/feasto-backend/restaurant/target/classes/org/restaurant/service/RestaurantService.class]: Unsatisfied dependency expressed through constructor parameter 1: Error creating bean with name 'elasticRestaurantRepository' defined in org.restaurant.repository.elasticsearch.ElasticRestaurantRepository defined in @EnableElasticsearchRepositories declared on ElasticsearchRepositoriesRegistrar.EnableElasticsearchRepositoriesConfiguration: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository]: Constructor threw exception
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:798) ~[spring-beans-6.1.3.jar:6.1.3]
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237) ~[spring-beans-6.1.3.jar:6.1.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354) ~[spring-beans-6.1.3.jar:6.1.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191) ~[spring-beans-6.1.3.jar:6.1.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561) ~[spring-beans-6.1.3.jar:6.1.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521) ~[spring-beans-6.1.3.jar:6.1.3]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325) ~[spring-beans-6.1.3.jar:6.1.3]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.3.jar:6.1.3]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323) ~[spring-beans-6.1.3.jar:6.1.3]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-6.1.3.jar:6.1.3]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.3.jar:6.1.3]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.3.jar:6.1.3]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.3.jar:6.1.3]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:907) ~[spring-beans-6.1.3.jar:6.1.3]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:785) ~[spring-beans-6.1.3.jar:6.1.3]
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticRestaurantRepository' defined in org.restaurant.repository.elasticsearch.ElasticRestaurantRepository defined in @EnableElasticsearchRepositories declared on ElasticsearchRepositoriesRegistrar.EnableElasticsearchRepositoriesConfiguration: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository]: Constructor threw exception
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1773) ~[spring-beans-6.1.3.jar:6.1.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.3.jar:6.1.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521) ~[spring-beans-6.1.3.jar:6.1.3]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325) ~[spring-beans-6.1.3.jar:6.1.3]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.3.jar:6.1.3]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323) ~[spring-beans-6.1.3.jar:6.1.3]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-6.1.3.jar:6.1.3]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.3.jar:6.1.3]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.3.jar:6.1.3]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.3.jar:6.1.3]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:907) ~[spring-beans-6.1.3.jar:6.1.3]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:785) ~[spring-beans-6.1.3.jar:6.1.3]
	... 33 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository]: Constructor threw exception
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:223) ~[spring-beans-6.1.3.jar:6.1.3]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.lambda$instantiateClass$5(RepositoryFactorySupport.java:571) ~[spring-data-commons-3.2.2.jar:3.2.2]
	at java.base/java.util.Optional.map(Optional.java:260) ~[na:na]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.instantiateClass(RepositoryFactorySupport.java:571) ~[spring-data-commons-3.2.2.jar:3.2.2]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getTargetRepositoryViaReflection(RepositoryFactorySupport.java:536) ~[spring-data-commons-3.2.2.jar:3.2.2]
	at org.springframework.data.elasticsearch.repository.support.ElasticsearchRepositoryFactory.getTargetRepository(ElasticsearchRepositoryFactory.java:79) ~[spring-data-elasticsearch-5.1.2.jar:5.1.2]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:317) ~[spring-data-commons-3.2.2.jar:3.2.2]
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279) ~[spring-data-commons-3.2.2.jar:3.2.2]
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135) ~[spring-data-commons-3.2.2.jar:3.2.2]
	at org.springframework.data.util.Lazy.get(Lazy.java:113) ~[spring-data-commons-3.2.2.jar:3.2.2]
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285) ~[spring-data-commons-3.2.2.jar:3.2.2]
	at org.springframework.data.elasticsearch.repository.support.ElasticsearchRepositoryFactoryBean.afterPropertiesSet(ElasticsearchRepositoryFactoryBean.java:69) ~[spring-data-elasticsearch-5.1.2.jar:5.1.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820) ~[spring-beans-6.1.3.jar:6.1.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769) ~[spring-beans-6.1.3.jar:6.1.3]
	... 44 common frames omitted
Caused by: org.springframework.dao.DataAccessResourceFailureException: Connection refused
	at org.springframework.data.elasticsearch.client.elc.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:107) ~[spring-data-elasticsearch-5.1.2.jar:5.1.2]
	at org.springframework.data.elasticsearch.client.elc.ElasticsearchExceptionTranslator.translateException(ElasticsearchExceptionTranslator.java:63) ~[spring-data-elasticsearch-5.1.2.jar:5.1.2]
	at org.springframework.data.elasticsearch.client.elc.ChildTemplate.execute(ChildTemplate.java:73) ~[spring-data-elasticsearch-5.1.2.jar:5.1.2]
	at org.springframework.data.elasticsearch.client.elc.IndicesTemplate.doExists(IndicesTemplate.java:177) ~[spring-data-elasticsearch-5.1.2.jar:5.1.2]
	at org.springframework.data.elasticsearch.client.elc.IndicesTemplate.exists(IndicesTemplate.java:169) ~[spring-data-elasticsearch-5.1.2.jar:5.1.2]
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.<init>(SimpleElasticsearchRepository.java:83) ~[spring-data-elasticsearch-5.1.2.jar:5.1.2]
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62) ~[na:na]
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502) ~[na:na]
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486) ~[na:na]
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:210) ~[spring-beans-6.1.3.jar:6.1.3]
	... 57 common frames omitted
Caused by: java.lang.RuntimeException: Connection refused
	at org.springframework.data.elasticsearch.client.elc.ElasticsearchExceptionTranslator.translateException(ElasticsearchExceptionTranslator.java:62) ~[spring-data-elasticsearch-5.1.2.jar:5.1.2]
	... 65 common frames omitted
Caused by: java.net.ConnectException: Connection refused
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:930) ~[elasticsearch-rest-client-8.10.4.jar:8.10.4]
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:300) ~[elasticsearch-rest-client-8.10.4.jar:8.10.4]
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:288) ~[elasticsearch-rest-client-8.10.4.jar:8.10.4]
	at co.elastic.clients.transport.rest_client.RestClientHttpClient.performRequest(RestClientHttpClient.java:91) ~[elasticsearch-java-8.10.4.jar:na]
	at co.elastic.clients.transport.ElasticsearchTransportBase.performRequest(ElasticsearchTransportBase.java:137) ~[elasticsearch-java-8.10.4.jar:na]
	at co.elastic.clients.elasticsearch.indices.ElasticsearchIndicesClient.exists(ElasticsearchIndicesClient.java:655) ~[elasticsearch-java-8.10.4.jar:na]
	at org.springframework.data.elasticsearch.client.elc.IndicesTemplate.lambda$doExists$2(IndicesTemplate.java:177) ~[spring-data-elasticsearch-5.1.2.jar:5.1.2]
	at org.springframework.data.elasticsearch.client.elc.ChildTemplate.execute(ChildTemplate.java:71) ~[spring-data-elasticsearch-5.1.2.jar:5.1.2]
	... 64 common frames omitted
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method) ~[na:na]
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682) ~[na:na]
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:973) ~[na:na]
	at org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processEvent(DefaultConnectingIOReactor.java:174) ~[httpcore-nio-4.4.16.jar:4.4.16]
	at org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processEvents(DefaultConnectingIOReactor.java:148) ~[httpcore-nio-4.4.16.jar:4.4.16]
	at org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.execute(AbstractMultiworkerIOReactor.java:351) ~[httpcore-nio-4.4.16.jar:4.4.16]
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.execute(PoolingNHttpClientConnectionManager.java:221) ~[httpasyncclient-4.1.5.jar:4.1.5]
	at org.apache.http.impl.nio.client.CloseableHttpAsyncClientBase$1.run(CloseableHttpAsyncClientBase.java:64) ~[httpasyncclient-4.1.5.jar:4.1.5]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2024-11-17T11:12:10.700+01:00  INFO 28050 --- [restaurant-service] [main] org.restaurant.RestaurantApplication     : Starting RestaurantApplication using Java 21.0.3 with PID 28050 (/Users/jakubsokol/feasto-app-main/feasto-backend/restaurant/target/classes started by jakubsokol in /Users/jakubsokol/feasto-app-main/feasto-backend)
2024-11-17T11:12:10.701+01:00  INFO 28050 --- [restaurant-service] [main] org.restaurant.RestaurantApplication     : No active profile set, falling back to 1 default profile: "default"
2024-11-17T11:12:12.228+01:00  INFO 28050 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-17T11:12:12.230+01:00  INFO 28050 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2024-11-17T11:12:12.267+01:00  INFO 28050 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.LocationRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-11-17T11:12:12.268+01:00  INFO 28050 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.MenuItemRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-11-17T11:12:12.269+01:00  INFO 28050 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.RatingRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-11-17T11:12:12.270+01:00  INFO 28050 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.RestaurantRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-11-17T11:12:12.270+01:00  INFO 28050 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.UserFavoriteRestaurantRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-11-17T11:12:12.335+01:00  INFO 28050 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 103 ms. Found 1 Elasticsearch repository interface.
2024-11-17T11:12:12.341+01:00  INFO 28050 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-17T11:12:12.341+01:00  INFO 28050 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2024-11-17T11:12:12.346+01:00  INFO 28050 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.LocationRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-11-17T11:12:12.347+01:00  INFO 28050 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.MenuItemRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-11-17T11:12:12.347+01:00  INFO 28050 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.RatingRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-11-17T11:12:12.347+01:00  INFO 28050 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.RestaurantRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-11-17T11:12:12.347+01:00  INFO 28050 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.UserFavoriteRestaurantRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-11-17T11:12:12.350+01:00  INFO 28050 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 9 ms. Found 0 Reactive Elasticsearch repository interfaces.
2024-11-17T11:12:12.356+01:00  INFO 28050 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-17T11:12:12.356+01:00  INFO 28050 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-17T11:12:12.370+01:00  INFO 28050 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.elasticsearch.ElasticRestaurantRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-11-17T11:12:12.381+01:00  INFO 28050 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 23 ms. Found 5 JPA repository interfaces.
2024-11-17T11:12:12.743+01:00  INFO 28050 --- [restaurant-service] [main] o.s.cloud.context.scope.GenericScope     : BeanFactory id=d5016c9d-c668-36f7-8045-781a81ac760a
2024-11-17T11:12:13.367+01:00  WARN 28050 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-11-17T11:12:13.373+01:00  WARN 28050 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:12:13.386+01:00  WARN 28050 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:12:13.396+01:00  WARN 28050 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:12:13.401+01:00  WARN 28050 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:12:13.403+01:00  WARN 28050 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x0000000122573ca8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:12:13.411+01:00  WARN 28050 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:12:13.427+01:00  WARN 28050 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:12:13.437+01:00  WARN 28050 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:12:13.442+01:00  WARN 28050 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:12:13.444+01:00  WARN 28050 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:12:13.446+01:00  WARN 28050 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:12:13.458+01:00  WARN 28050 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:12:13.467+01:00  WARN 28050 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:12:13.470+01:00  WARN 28050 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:12:13.473+01:00  WARN 28050 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:12:13.476+01:00  WARN 28050 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:12:13.478+01:00  WARN 28050 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:12:13.485+01:00  WARN 28050 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancedRetryFactory' of type [org.springframework.cloud.loadbalancer.blocking.retry.BlockingLoadBalancedRetryFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:12:13.493+01:00  WARN 28050 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:12:13.506+01:00  WARN 28050 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-11-17T11:12:13.509+01:00  WARN 28050 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:12:13.510+01:00  WARN 28050 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:12:13.772+01:00  INFO 28050 --- [restaurant-service] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-11-17T11:12:13.781+01:00  INFO 28050 --- [restaurant-service] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-11-17T11:12:13.781+01:00  INFO 28050 --- [restaurant-service] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.18]
2024-11-17T11:12:13.823+01:00  INFO 28050 --- [restaurant-service] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-11-17T11:12:13.823+01:00  INFO 28050 --- [restaurant-service] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3054 ms
2024-11-17T11:12:14.249+01:00  INFO 28050 --- [restaurant-service] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-17T11:12:14.283+01:00  INFO 28050 --- [restaurant-service] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.4.1.Final
2024-11-17T11:12:14.298+01:00  INFO 28050 --- [restaurant-service] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-11-17T11:12:14.414+01:00  INFO 28050 --- [restaurant-service] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-11-17T11:12:14.428+01:00  INFO 28050 --- [restaurant-service] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-11-17T11:12:14.556+01:00  INFO 28050 --- [restaurant-service] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@527d1fe1
2024-11-17T11:12:14.557+01:00  INFO 28050 --- [restaurant-service] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-11-17T11:12:14.583+01:00  WARN 28050 --- [restaurant-service] [main] org.hibernate.orm.deprecation            : HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-11-17T11:12:15.544+01:00  INFO 28050 --- [restaurant-service] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-11-17T11:12:15.671+01:00  INFO 28050 --- [restaurant-service] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-11-17T11:12:17.963+01:00  WARN 28050 --- [restaurant-service] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-11-17T11:12:18.011+01:00  WARN 28050 --- [restaurant-service] [main] .s.s.UserDetailsServiceAutoConfiguration : 

Using generated security password: 1f121e57-6a9b-49eb-81af-ddd707303299

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2024-11-17T11:12:19.134+01:00  INFO 28050 --- [restaurant-service] [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 25 endpoint(s) beneath base path '/actuator'
2024-11-17T11:12:19.244+01:00  INFO 28050 --- [restaurant-service] [main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@2fe19bda, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@141fc03a, org.springframework.security.web.context.SecurityContextHolderFilter@2c3c36df, org.springframework.security.web.header.HeaderWriterFilter@756695e3, org.springframework.web.filter.CorsFilter@1df2b230, org.springframework.security.web.authentication.logout.LogoutFilter@2c27d6e5, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@d388775, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7c5024c1, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@37d85eec, org.springframework.security.web.access.ExceptionTranslationFilter@54978e18, org.springframework.security.web.access.intercept.AuthorizationFilter@460306ab]
2024-11-17T11:12:20.359+01:00  INFO 28050 --- [restaurant-service] [main] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2024-11-17T11:12:20.435+01:00  WARN 28050 --- [restaurant-service] [main] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-11-17T11:12:20.587+01:00  INFO 28050 --- [restaurant-service] [main] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2024-11-17T11:12:20.624+01:00  INFO 28050 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2024-11-17T11:12:20.628+01:00  INFO 28050 --- [restaurant-service] [main] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-11-17T11:12:20.652+01:00  INFO 28050 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-11-17T11:12:20.653+01:00  INFO 28050 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-11-17T11:12:20.653+01:00  INFO 28050 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-11-17T11:12:20.653+01:00  INFO 28050 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-11-17T11:12:20.653+01:00  INFO 28050 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-11-17T11:12:20.653+01:00  INFO 28050 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2024-11-17T11:12:20.653+01:00  INFO 28050 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-11-17T11:12:20.928+01:00  INFO 28050 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-11-17T11:12:20.931+01:00  INFO 28050 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2024-11-17T11:12:20.933+01:00  INFO 28050 --- [restaurant-service] [main] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-11-17T11:12:20.937+01:00  INFO 28050 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1731838340936 with initial instances count: 2
2024-11-17T11:12:20.949+01:00  INFO 28050 --- [restaurant-service] [main] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application RESTAURANT-SERVICE with eureka with status UP
2024-11-17T11:12:20.949+01:00  INFO 28050 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1731838340949, current=UP, previous=STARTING]
2024-11-17T11:12:20.950+01:00  INFO 28050 --- [restaurant-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_RESTAURANT-SERVICE/192.168.0.129:restaurant-service: registering service...
2024-11-17T11:12:20.963+01:00  INFO 28050 --- [restaurant-service] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path ''
2024-11-17T11:12:20.965+01:00  INFO 28050 --- [restaurant-service] [main] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 8080
2024-11-17T11:12:21.035+01:00  INFO 28050 --- [restaurant-service] [main] org.restaurant.RestaurantApplication     : Started RestaurantApplication in 10.871 seconds (process running for 11.987)
2024-11-17T11:12:21.041+01:00  INFO 28050 --- [restaurant-service] [scheduling-1] o.r.aspect.PerformanceTrackerHandler     : Execution started: tasks.scheduled.execution
2024-11-17T11:12:21.063+01:00  INFO 28050 --- [restaurant-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_RESTAURANT-SERVICE/192.168.0.129:restaurant-service - registration status: 204
2024-11-17T11:12:21.291+01:00  INFO 28050 --- [restaurant-service] [scheduling-1] o.r.aspect.PerformanceTrackerHandler     : execution stopped tasks.scheduled.executionduration 249
2024-11-17T11:12:21.636+01:00  INFO 28050 --- [restaurant-service] [RMI TCP Connection(2)-127.0.0.1] o.s.a.r.c.CachingConnectionFactory       : Attempting to connect to: [localhost:5672]
2024-11-17T11:12:21.636+01:00  INFO 28050 --- [restaurant-service] [RMI TCP Connection(3)-127.0.0.1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-11-17T11:12:21.637+01:00  INFO 28050 --- [restaurant-service] [RMI TCP Connection(3)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-11-17T11:12:21.638+01:00  INFO 28050 --- [restaurant-service] [RMI TCP Connection(3)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-11-17T11:12:21.640+01:00  WARN 28050 --- [restaurant-service] [RMI TCP Connection(2)-127.0.0.1] o.s.b.a.amqp.RabbitHealthIndicator       : Rabbit health check failed

org.springframework.amqp.AmqpConnectException: java.net.ConnectException: Connection refused
	at org.springframework.amqp.rabbit.support.RabbitExceptionTranslator.convertRabbitAccessException(RabbitExceptionTranslator.java:61) ~[spring-rabbit-3.1.1.jar:3.1.1]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:606) ~[spring-rabbit-3.1.1.jar:3.1.1]
	at org.springframework.amqp.rabbit.connection.CachingConnectionFactory.createConnection(CachingConnectionFactory.java:727) ~[spring-rabbit-3.1.1.jar:3.1.1]
	at org.springframework.amqp.rabbit.connection.ConnectionFactoryUtils.createConnection(ConnectionFactoryUtils.java:257) ~[spring-rabbit-3.1.1.jar:3.1.1]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:2249) ~[spring-rabbit-3.1.1.jar:3.1.1]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.execute(RabbitTemplate.java:2222) ~[spring-rabbit-3.1.1.jar:3.1.1]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.execute(RabbitTemplate.java:2202) ~[spring-rabbit-3.1.1.jar:3.1.1]
	at org.springframework.boot.actuate.amqp.RabbitHealthIndicator.getVersion(RabbitHealthIndicator.java:49) ~[spring-boot-actuator-3.2.2.jar:3.2.2]
	at org.springframework.boot.actuate.amqp.RabbitHealthIndicator.doHealthCheck(RabbitHealthIndicator.java:44) ~[spring-boot-actuator-3.2.2.jar:3.2.2]
	at org.springframework.boot.actuate.health.AbstractHealthIndicator.health(AbstractHealthIndicator.java:82) ~[spring-boot-actuator-3.2.2.jar:3.2.2]
	at org.springframework.boot.actuate.health.HealthIndicator.getHealth(HealthIndicator.java:37) ~[spring-boot-actuator-3.2.2.jar:3.2.2]
	at org.springframework.boot.actuate.health.HealthEndpoint.getHealth(HealthEndpoint.java:82) ~[spring-boot-actuator-3.2.2.jar:3.2.2]
	at org.springframework.boot.actuate.health.HealthEndpoint.getHealth(HealthEndpoint.java:41) ~[spring-boot-actuator-3.2.2.jar:3.2.2]
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getLoggedHealth(HealthEndpointSupport.java:172) ~[spring-boot-actuator-3.2.2.jar:3.2.2]
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getContribution(HealthEndpointSupport.java:145) ~[spring-boot-actuator-3.2.2.jar:3.2.2]
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getAggregateContribution(HealthEndpointSupport.java:156) ~[spring-boot-actuator-3.2.2.jar:3.2.2]
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getContribution(HealthEndpointSupport.java:141) ~[spring-boot-actuator-3.2.2.jar:3.2.2]
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getHealth(HealthEndpointSupport.java:110) ~[spring-boot-actuator-3.2.2.jar:3.2.2]
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getHealth(HealthEndpointSupport.java:81) ~[spring-boot-actuator-3.2.2.jar:3.2.2]
	at org.springframework.boot.actuate.health.HealthEndpoint.health(HealthEndpoint.java:76) ~[spring-boot-actuator-3.2.2.jar:3.2.2]
	at org.springframework.boot.actuate.health.HealthEndpoint.health(HealthEndpoint.java:66) ~[spring-boot-actuator-3.2.2.jar:3.2.2]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:281) ~[spring-core-6.1.3.jar:6.1.3]
	at org.springframework.boot.actuate.endpoint.invoke.reflect.ReflectiveOperationInvoker.invoke(ReflectiveOperationInvoker.java:74) ~[spring-boot-actuator-3.2.2.jar:3.2.2]
	at org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredOperation.invoke(AbstractDiscoveredOperation.java:60) ~[spring-boot-actuator-3.2.2.jar:3.2.2]
	at org.springframework.boot.actuate.endpoint.jmx.EndpointMBean.invoke(EndpointMBean.java:124) ~[spring-boot-actuator-3.2.2.jar:3.2.2]
	at org.springframework.boot.actuate.endpoint.jmx.EndpointMBean.invoke(EndpointMBean.java:97) ~[spring-boot-actuator-3.2.2.jar:3.2.2]
	at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:803) ~[na:na]
	at java.management/com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:802) ~[na:na]
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1472) ~[na:na]
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1310) ~[na:na]
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1405) ~[na:na]
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.invoke(RMIConnectionImpl.java:829) ~[na:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360) ~[na:na]
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200) ~[na:na]
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197) ~[na:na]
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:714) ~[na:na]
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196) ~[na:na]
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:598) ~[na:na]
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:844) ~[na:na]
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:721) ~[na:na]
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:400) ~[na:na]
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:720) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method) ~[na:na]
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:549) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592) ~[na:na]
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327) ~[na:na]
	at java.base/java.net.Socket.connect(Socket.java:751) ~[na:na]
	at com.rabbitmq.client.impl.SocketFrameHandlerFactory.create(SocketFrameHandlerFactory.java:61) ~[amqp-client-5.19.0.jar:5.19.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1249) ~[amqp-client-5.19.0.jar:5.19.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1198) ~[amqp-client-5.19.0.jar:5.19.0]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connectAddresses(AbstractConnectionFactory.java:652) ~[spring-rabbit-3.1.1.jar:3.1.1]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connect(AbstractConnectionFactory.java:621) ~[spring-rabbit-3.1.1.jar:3.1.1]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:568) ~[spring-rabbit-3.1.1.jar:3.1.1]
	... 47 common frames omitted

2024-11-17T11:13:22.434+01:00  INFO 28050 --- [restaurant-service] [SpringApplicationShutdownHook] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application RESTAURANT-SERVICE with eureka with status DOWN
2024-11-17T11:13:22.441+01:00  INFO 28050 --- [restaurant-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1731838402441, current=DOWN, previous=UP]
2024-11-17T11:13:22.443+01:00  INFO 28050 --- [restaurant-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_RESTAURANT-SERVICE/192.168.0.129:restaurant-service: registering service...
2024-11-17T11:13:22.499+01:00  INFO 28050 --- [restaurant-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_RESTAURANT-SERVICE/192.168.0.129:restaurant-service - registration status: 204
2024-11-17T11:13:22.571+01:00  INFO 28050 --- [restaurant-service] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-11-17T11:13:22.576+01:00  INFO 28050 --- [restaurant-service] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-11-17T11:13:22.579+01:00  INFO 28050 --- [restaurant-service] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-11-17T11:13:22.580+01:00  INFO 28050 --- [restaurant-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2024-11-17T11:13:25.594+01:00  INFO 28050 --- [restaurant-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2024-11-17T11:13:25.612+01:00  INFO 28050 --- [restaurant-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_RESTAURANT-SERVICE/192.168.0.129:restaurant-service - deregister  status: 200
2024-11-17T11:13:25.627+01:00  INFO 28050 --- [restaurant-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2024-11-17T11:13:28.658+01:00  INFO 28103 --- [restaurant-service] [main] org.restaurant.RestaurantApplication     : Starting RestaurantApplication using Java 21.0.3 with PID 28103 (/Users/jakubsokol/feasto-app-main/feasto-backend/restaurant/target/classes started by jakubsokol in /Users/jakubsokol/feasto-app-main/feasto-backend)
2024-11-17T11:13:28.661+01:00  INFO 28103 --- [restaurant-service] [main] org.restaurant.RestaurantApplication     : No active profile set, falling back to 1 default profile: "default"
2024-11-17T11:13:30.057+01:00  INFO 28103 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-17T11:13:30.059+01:00  INFO 28103 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2024-11-17T11:13:30.094+01:00  INFO 28103 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.LocationRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-11-17T11:13:30.095+01:00  INFO 28103 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.MenuItemRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-11-17T11:13:30.096+01:00  INFO 28103 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.RatingRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-11-17T11:13:30.096+01:00  INFO 28103 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.RestaurantRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-11-17T11:13:30.097+01:00  INFO 28103 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.UserFavoriteRestaurantRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-11-17T11:13:30.164+01:00  INFO 28103 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 102 ms. Found 1 Elasticsearch repository interface.
2024-11-17T11:13:30.169+01:00  INFO 28103 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-17T11:13:30.170+01:00  INFO 28103 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2024-11-17T11:13:30.175+01:00  INFO 28103 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.LocationRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-11-17T11:13:30.176+01:00  INFO 28103 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.MenuItemRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-11-17T11:13:30.177+01:00  INFO 28103 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.RatingRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-11-17T11:13:30.177+01:00  INFO 28103 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.RestaurantRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-11-17T11:13:30.177+01:00  INFO 28103 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.UserFavoriteRestaurantRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-11-17T11:13:30.179+01:00  INFO 28103 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 9 ms. Found 0 Reactive Elasticsearch repository interfaces.
2024-11-17T11:13:30.185+01:00  INFO 28103 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-17T11:13:30.185+01:00  INFO 28103 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-17T11:13:30.197+01:00  INFO 28103 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.elasticsearch.ElasticRestaurantRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-11-17T11:13:30.208+01:00  INFO 28103 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 21 ms. Found 5 JPA repository interfaces.
2024-11-17T11:13:30.587+01:00  INFO 28103 --- [restaurant-service] [main] o.s.cloud.context.scope.GenericScope     : BeanFactory id=d5016c9d-c668-36f7-8045-781a81ac760a
2024-11-17T11:13:31.206+01:00  WARN 28103 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-11-17T11:13:31.213+01:00  WARN 28103 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:13:31.226+01:00  WARN 28103 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:13:31.235+01:00  WARN 28103 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:13:31.241+01:00  WARN 28103 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:13:31.244+01:00  WARN 28103 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x0000000124583a70] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:13:31.251+01:00  WARN 28103 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:13:31.267+01:00  WARN 28103 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:13:31.277+01:00  WARN 28103 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:13:31.282+01:00  WARN 28103 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:13:31.285+01:00  WARN 28103 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:13:31.286+01:00  WARN 28103 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:13:31.297+01:00  WARN 28103 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:13:31.307+01:00  WARN 28103 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:13:31.311+01:00  WARN 28103 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:13:31.313+01:00  WARN 28103 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:13:31.315+01:00  WARN 28103 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:13:31.318+01:00  WARN 28103 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:13:31.325+01:00  WARN 28103 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancedRetryFactory' of type [org.springframework.cloud.loadbalancer.blocking.retry.BlockingLoadBalancedRetryFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:13:31.331+01:00  WARN 28103 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:13:31.338+01:00  WARN 28103 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-11-17T11:13:31.340+01:00  WARN 28103 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:13:31.341+01:00  WARN 28103 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:13:31.601+01:00  INFO 28103 --- [restaurant-service] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-11-17T11:13:31.610+01:00  INFO 28103 --- [restaurant-service] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-11-17T11:13:31.610+01:00  INFO 28103 --- [restaurant-service] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.18]
2024-11-17T11:13:31.655+01:00  INFO 28103 --- [restaurant-service] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-11-17T11:13:31.655+01:00  INFO 28103 --- [restaurant-service] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2935 ms
2024-11-17T11:13:32.080+01:00  INFO 28103 --- [restaurant-service] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-17T11:13:32.113+01:00  INFO 28103 --- [restaurant-service] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.4.1.Final
2024-11-17T11:13:32.127+01:00  INFO 28103 --- [restaurant-service] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-11-17T11:13:32.225+01:00  INFO 28103 --- [restaurant-service] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-11-17T11:13:32.238+01:00  INFO 28103 --- [restaurant-service] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-11-17T11:13:32.373+01:00  INFO 28103 --- [restaurant-service] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4faaff61
2024-11-17T11:13:32.374+01:00  INFO 28103 --- [restaurant-service] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-11-17T11:13:32.395+01:00  WARN 28103 --- [restaurant-service] [main] org.hibernate.orm.deprecation            : HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-11-17T11:13:33.366+01:00  INFO 28103 --- [restaurant-service] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-11-17T11:13:33.491+01:00  INFO 28103 --- [restaurant-service] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-11-17T11:13:35.647+01:00  WARN 28103 --- [restaurant-service] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-11-17T11:13:35.697+01:00  WARN 28103 --- [restaurant-service] [main] .s.s.UserDetailsServiceAutoConfiguration : 

Using generated security password: aaa6b50c-9dda-4987-a701-b398563c0319

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2024-11-17T11:13:36.865+01:00  INFO 28103 --- [restaurant-service] [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 25 endpoint(s) beneath base path '/actuator'
2024-11-17T11:13:37.180+01:00  INFO 28103 --- [restaurant-service] [main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@2c127caf, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6c238208, org.springframework.security.web.context.SecurityContextHolderFilter@3614cd03, org.springframework.security.web.header.HeaderWriterFilter@29260ef6, org.springframework.web.filter.CorsFilter@680882bd, org.springframework.security.web.authentication.logout.LogoutFilter@400a5164, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1762be43, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@201bc8f0, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4e02800b, org.springframework.security.web.access.ExceptionTranslationFilter@474998da, org.springframework.security.web.access.intercept.AuthorizationFilter@7b054614]
2024-11-17T11:13:38.072+01:00  INFO 28103 --- [restaurant-service] [main] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2024-11-17T11:13:38.105+01:00  WARN 28103 --- [restaurant-service] [main] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-11-17T11:13:38.605+01:00  INFO 28103 --- [restaurant-service] [main] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2024-11-17T11:13:38.651+01:00  INFO 28103 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2024-11-17T11:13:38.655+01:00  INFO 28103 --- [restaurant-service] [main] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-11-17T11:13:38.682+01:00  INFO 28103 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-11-17T11:13:38.683+01:00  INFO 28103 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-11-17T11:13:38.683+01:00  INFO 28103 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-11-17T11:13:38.683+01:00  INFO 28103 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-11-17T11:13:38.683+01:00  INFO 28103 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-11-17T11:13:38.683+01:00  INFO 28103 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2024-11-17T11:13:38.683+01:00  INFO 28103 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-11-17T11:13:38.931+01:00  INFO 28103 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-11-17T11:13:38.933+01:00  INFO 28103 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2024-11-17T11:13:38.936+01:00  INFO 28103 --- [restaurant-service] [main] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-11-17T11:13:38.939+01:00  INFO 28103 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1731838418939 with initial instances count: 3
2024-11-17T11:13:38.952+01:00  INFO 28103 --- [restaurant-service] [main] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application RESTAURANT-SERVICE with eureka with status UP
2024-11-17T11:13:38.952+01:00  INFO 28103 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1731838418952, current=UP, previous=STARTING]
2024-11-17T11:13:38.953+01:00  INFO 28103 --- [restaurant-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_RESTAURANT-SERVICE/192.168.0.129:restaurant-service: registering service...
2024-11-17T11:13:38.966+01:00  INFO 28103 --- [restaurant-service] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path ''
2024-11-17T11:13:38.968+01:00  INFO 28103 --- [restaurant-service] [main] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 8080
2024-11-17T11:13:38.994+01:00  INFO 28103 --- [restaurant-service] [main] org.restaurant.RestaurantApplication     : Started RestaurantApplication in 10.934 seconds (process running for 11.761)
2024-11-17T11:13:38.997+01:00  INFO 28103 --- [restaurant-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_RESTAURANT-SERVICE/192.168.0.129:restaurant-service - registration status: 204
2024-11-17T11:13:38.997+01:00  INFO 28103 --- [restaurant-service] [scheduling-1] o.r.aspect.PerformanceTrackerHandler     : Execution started: tasks.scheduled.execution
2024-11-17T11:13:39.172+01:00  INFO 28103 --- [restaurant-service] [scheduling-1] o.r.aspect.PerformanceTrackerHandler     : execution stopped tasks.scheduled.executionduration 175
2024-11-17T11:13:39.679+01:00  INFO 28103 --- [restaurant-service] [RMI TCP Connection(2)-127.0.0.1] o.s.a.r.c.CachingConnectionFactory       : Attempting to connect to: [localhost:5672]
2024-11-17T11:13:39.683+01:00  INFO 28103 --- [restaurant-service] [RMI TCP Connection(3)-127.0.0.1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-11-17T11:13:39.684+01:00  INFO 28103 --- [restaurant-service] [RMI TCP Connection(3)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-11-17T11:13:39.687+01:00  INFO 28103 --- [restaurant-service] [RMI TCP Connection(3)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 3 ms
2024-11-17T11:13:39.689+01:00  WARN 28103 --- [restaurant-service] [RMI TCP Connection(2)-127.0.0.1] o.s.b.a.amqp.RabbitHealthIndicator       : Rabbit health check failed

org.springframework.amqp.AmqpConnectException: java.net.ConnectException: Connection refused
	at org.springframework.amqp.rabbit.support.RabbitExceptionTranslator.convertRabbitAccessException(RabbitExceptionTranslator.java:61) ~[spring-rabbit-3.1.1.jar:3.1.1]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:606) ~[spring-rabbit-3.1.1.jar:3.1.1]
	at org.springframework.amqp.rabbit.connection.CachingConnectionFactory.createConnection(CachingConnectionFactory.java:727) ~[spring-rabbit-3.1.1.jar:3.1.1]
	at org.springframework.amqp.rabbit.connection.ConnectionFactoryUtils.createConnection(ConnectionFactoryUtils.java:257) ~[spring-rabbit-3.1.1.jar:3.1.1]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:2249) ~[spring-rabbit-3.1.1.jar:3.1.1]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.execute(RabbitTemplate.java:2222) ~[spring-rabbit-3.1.1.jar:3.1.1]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.execute(RabbitTemplate.java:2202) ~[spring-rabbit-3.1.1.jar:3.1.1]
	at org.springframework.boot.actuate.amqp.RabbitHealthIndicator.getVersion(RabbitHealthIndicator.java:49) ~[spring-boot-actuator-3.2.2.jar:3.2.2]
	at org.springframework.boot.actuate.amqp.RabbitHealthIndicator.doHealthCheck(RabbitHealthIndicator.java:44) ~[spring-boot-actuator-3.2.2.jar:3.2.2]
	at org.springframework.boot.actuate.health.AbstractHealthIndicator.health(AbstractHealthIndicator.java:82) ~[spring-boot-actuator-3.2.2.jar:3.2.2]
	at org.springframework.boot.actuate.health.HealthIndicator.getHealth(HealthIndicator.java:37) ~[spring-boot-actuator-3.2.2.jar:3.2.2]
	at org.springframework.boot.actuate.health.HealthEndpoint.getHealth(HealthEndpoint.java:82) ~[spring-boot-actuator-3.2.2.jar:3.2.2]
	at org.springframework.boot.actuate.health.HealthEndpoint.getHealth(HealthEndpoint.java:41) ~[spring-boot-actuator-3.2.2.jar:3.2.2]
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getLoggedHealth(HealthEndpointSupport.java:172) ~[spring-boot-actuator-3.2.2.jar:3.2.2]
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getContribution(HealthEndpointSupport.java:145) ~[spring-boot-actuator-3.2.2.jar:3.2.2]
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getAggregateContribution(HealthEndpointSupport.java:156) ~[spring-boot-actuator-3.2.2.jar:3.2.2]
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getContribution(HealthEndpointSupport.java:141) ~[spring-boot-actuator-3.2.2.jar:3.2.2]
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getHealth(HealthEndpointSupport.java:110) ~[spring-boot-actuator-3.2.2.jar:3.2.2]
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getHealth(HealthEndpointSupport.java:81) ~[spring-boot-actuator-3.2.2.jar:3.2.2]
	at org.springframework.boot.actuate.health.HealthEndpoint.health(HealthEndpoint.java:76) ~[spring-boot-actuator-3.2.2.jar:3.2.2]
	at org.springframework.boot.actuate.health.HealthEndpoint.health(HealthEndpoint.java:66) ~[spring-boot-actuator-3.2.2.jar:3.2.2]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:281) ~[spring-core-6.1.3.jar:6.1.3]
	at org.springframework.boot.actuate.endpoint.invoke.reflect.ReflectiveOperationInvoker.invoke(ReflectiveOperationInvoker.java:74) ~[spring-boot-actuator-3.2.2.jar:3.2.2]
	at org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredOperation.invoke(AbstractDiscoveredOperation.java:60) ~[spring-boot-actuator-3.2.2.jar:3.2.2]
	at org.springframework.boot.actuate.endpoint.jmx.EndpointMBean.invoke(EndpointMBean.java:124) ~[spring-boot-actuator-3.2.2.jar:3.2.2]
	at org.springframework.boot.actuate.endpoint.jmx.EndpointMBean.invoke(EndpointMBean.java:97) ~[spring-boot-actuator-3.2.2.jar:3.2.2]
	at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:803) ~[na:na]
	at java.management/com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:802) ~[na:na]
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1472) ~[na:na]
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1310) ~[na:na]
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1405) ~[na:na]
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.invoke(RMIConnectionImpl.java:829) ~[na:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360) ~[na:na]
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200) ~[na:na]
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197) ~[na:na]
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:714) ~[na:na]
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196) ~[na:na]
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:598) ~[na:na]
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:844) ~[na:na]
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:721) ~[na:na]
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:400) ~[na:na]
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:720) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method) ~[na:na]
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:549) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592) ~[na:na]
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327) ~[na:na]
	at java.base/java.net.Socket.connect(Socket.java:751) ~[na:na]
	at com.rabbitmq.client.impl.SocketFrameHandlerFactory.create(SocketFrameHandlerFactory.java:61) ~[amqp-client-5.19.0.jar:5.19.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1249) ~[amqp-client-5.19.0.jar:5.19.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1198) ~[amqp-client-5.19.0.jar:5.19.0]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connectAddresses(AbstractConnectionFactory.java:652) ~[spring-rabbit-3.1.1.jar:3.1.1]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connect(AbstractConnectionFactory.java:621) ~[spring-rabbit-3.1.1.jar:3.1.1]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:568) ~[spring-rabbit-3.1.1.jar:3.1.1]
	... 47 common frames omitted

2024-11-17T11:18:38.696+01:00  INFO 28103 --- [restaurant-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-11-17T11:23:38.706+01:00  INFO 28103 --- [restaurant-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-11-17T11:28:26.444+01:00  INFO 28103 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : Execution started: http.server.requests
2024-11-17T11:28:26.462+01:00  INFO 28103 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.filterchains
2024-11-17T11:28:26.469+01:00  INFO 28103 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.authorizations
2024-11-17T11:28:26.471+01:00  INFO 28103 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.authorizationsduration 2
2024-11-17T11:28:26.472+01:00  INFO 28103 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.filterchainsduration 10
2024-11-17T11:28:26.472+01:00  INFO 28103 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.http.secured.requests
2024-11-17T11:28:26.538+01:00  INFO 28103 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : Execution started: get.restaurants
2024-11-17T11:28:26.573+01:00  INFO 28103 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : execution stopped get.restaurantsduration 35
2024-11-17T11:28:26.695+01:00  INFO 28103 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.http.secured.requestsduration 223
2024-11-17T11:28:26.696+01:00  INFO 28103 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.filterchains
2024-11-17T11:28:26.696+01:00  INFO 28103 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.filterchainsduration 0
2024-11-17T11:28:26.696+01:00  INFO 28103 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : execution stopped http.server.requestsduration 251
2024-11-17T11:28:38.720+01:00  INFO 28103 --- [restaurant-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-11-17T11:30:56.338+01:00  INFO 28103 --- [restaurant-service] [http-nio-8080-exec-3] o.r.aspect.PerformanceTrackerHandler     : Execution started: http.server.requests
2024-11-17T11:30:56.343+01:00  INFO 28103 --- [restaurant-service] [http-nio-8080-exec-3] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.filterchains
2024-11-17T11:30:56.345+01:00  INFO 28103 --- [restaurant-service] [http-nio-8080-exec-3] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.authorizations
2024-11-17T11:30:56.346+01:00  INFO 28103 --- [restaurant-service] [http-nio-8080-exec-3] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.authorizationsduration 1
2024-11-17T11:30:56.346+01:00  INFO 28103 --- [restaurant-service] [http-nio-8080-exec-3] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.filterchainsduration 3
2024-11-17T11:30:56.346+01:00  INFO 28103 --- [restaurant-service] [http-nio-8080-exec-3] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.http.secured.requests
2024-11-17T11:30:56.422+01:00  INFO 28103 --- [restaurant-service] [http-nio-8080-exec-3] o.r.aspect.PerformanceTrackerHandler     : Execution started: create.restaurant
2024-11-17T11:30:56.663+01:00  INFO 28103 --- [restaurant-service] [http-nio-8080-exec-3] o.r.aspect.PerformanceTrackerHandler     : Error occurred Map with prices can't be empty
2024-11-17T11:30:56.663+01:00  INFO 28103 --- [restaurant-service] [http-nio-8080-exec-3] o.r.aspect.PerformanceTrackerHandler     : execution stopped create.restaurantduration 241
2024-11-17T11:30:56.670+01:00  INFO 28103 --- [restaurant-service] [http-nio-8080-exec-3] o.r.aspect.PerformanceTrackerHandler     : Error occurred Request processing failed: org.springframework.dao.InvalidDataAccessApiUsageException: Map with prices can't be empty
2024-11-17T11:30:56.670+01:00  INFO 28103 --- [restaurant-service] [http-nio-8080-exec-3] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.http.secured.requestsduration 324
2024-11-17T11:30:56.670+01:00  INFO 28103 --- [restaurant-service] [http-nio-8080-exec-3] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.filterchains
2024-11-17T11:30:56.671+01:00  INFO 28103 --- [restaurant-service] [http-nio-8080-exec-3] o.r.aspect.PerformanceTrackerHandler     : Error occurred Request processing failed: org.springframework.dao.InvalidDataAccessApiUsageException: Map with prices can't be empty
2024-11-17T11:30:56.671+01:00  INFO 28103 --- [restaurant-service] [http-nio-8080-exec-3] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.filterchainsduration 1
2024-11-17T11:30:56.672+01:00  INFO 28103 --- [restaurant-service] [http-nio-8080-exec-3] o.r.aspect.PerformanceTrackerHandler     : Error occurred Map with prices can't be empty
2024-11-17T11:30:56.672+01:00  INFO 28103 --- [restaurant-service] [http-nio-8080-exec-3] o.r.aspect.PerformanceTrackerHandler     : execution stopped http.server.requestsduration 332
2024-11-17T11:30:56.674+01:00 ERROR 28103 --- [restaurant-service] [http-nio-8080-exec-3] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.InvalidDataAccessApiUsageException: Map with prices can't be empty] with root cause

java.lang.IllegalStateException: Map with prices can't be empty
	at org.restaurant.model.MenuItemEntity.lambda$updateLowestPrice$0(MenuItemEntity.java:50) ~[classes/:na]
	at java.base/java.util.Optional.orElseThrow(Optional.java:403) ~[na:na]
	at org.restaurant.model.MenuItemEntity.updateLowestPrice(MenuItemEntity.java:50) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.hibernate.jpa.event.internal.EntityCallback.performCallback(EntityCallback.java:50) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.jpa.event.internal.CallbackRegistryImpl.callback(CallbackRegistryImpl.java:123) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.jpa.event.internal.CallbackRegistryImpl.preCreate(CallbackRegistryImpl.java:72) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:196) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:138) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:816) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:764) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.engine.spi.CascadingActions$7.cascade(CascadingActions.java:290) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.engine.spi.CascadingActions$7.cascade(CascadingActions.java:280) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.engine.internal.Cascade.cascadeToOne(Cascade.java:517) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.engine.internal.Cascade.cascadeAssociation(Cascade.java:439) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.engine.internal.Cascade.cascadeProperty(Cascade.java:224) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.engine.internal.Cascade.cascadeCollectionElements(Cascade.java:551) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.engine.internal.Cascade.cascadeCollection(Cascade.java:481) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.engine.internal.Cascade.cascadeAssociation(Cascade.java:442) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.engine.internal.Cascade.cascadeProperty(Cascade.java:224) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.engine.internal.Cascade.cascade(Cascade.java:157) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.event.internal.AbstractSaveEventListener.cascadeAfterSave(AbstractSaveEventListener.java:513) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:312) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:219) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:774) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:758) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364) ~[spring-orm-6.1.3.jar:6.1.3]
	at jdk.proxy2/jdk.proxy2.$Proxy186.persist(Unknown Source) ~[na:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:319) ~[spring-orm-6.1.3.jar:6.1.3]
	at jdk.proxy2/jdk.proxy2.$Proxy186.persist(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:618) ~[spring-data-jpa-3.2.2.jar:3.2.2]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:351) ~[spring-aop-6.1.3.jar:6.1.3]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.2.2.jar:3.2.2]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.2.2.jar:3.2.2]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.2.2.jar:3.2.2]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516) ~[spring-data-commons-3.2.2.jar:3.2.2]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285) ~[spring-data-commons-3.2.2.jar:3.2.2]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628) ~[spring-data-commons-3.2.2.jar:3.2.2]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.3.jar:6.1.3]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168) ~[spring-data-commons-3.2.2.jar:3.2.2]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143) ~[spring-data-commons-3.2.2.jar:3.2.2]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.3.jar:6.1.3]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70) ~[spring-data-commons-3.2.2.jar:3.2.2]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.3.jar:6.1.3]
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123) ~[spring-tx-6.1.3.jar:6.1.3]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385) ~[spring-tx-6.1.3.jar:6.1.3]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.1.3.jar:6.1.3]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.3.jar:6.1.3]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-6.1.3.jar:6.1.3]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.3.jar:6.1.3]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164) ~[spring-data-jpa-3.2.2.jar:3.2.2]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.3.jar:6.1.3]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-6.1.3.jar:6.1.3]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.3.jar:6.1.3]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:220) ~[spring-aop-6.1.3.jar:6.1.3]
	at jdk.proxy2/jdk.proxy2.$Proxy195.save(Unknown Source) ~[na:na]
	at org.restaurant.service.RestaurantService.createRestaurant(RestaurantService.java:72) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:351) ~[spring-aop-6.1.3.jar:6.1.3]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.1.3.jar:6.1.3]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.1.3.jar:6.1.3]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765) ~[spring-aop-6.1.3.jar:6.1.3]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89) ~[spring-aop-6.1.3.jar:6.1.3]
	at io.micrometer.observation.aop.ObservedAspect.lambda$observe$2(ObservedAspect.java:150) ~[micrometer-observation-1.12.2.jar:1.12.2]
	at io.micrometer.observation.Observation.observeChecked(Observation.java:600) ~[micrometer-observation-1.12.2.jar:1.12.2]
	at io.micrometer.observation.aop.ObservedAspect.observe(ObservedAspect.java:150) ~[micrometer-observation-1.12.2.jar:1.12.2]
	at io.micrometer.observation.aop.ObservedAspect.observeMethod(ObservedAspect.java:128) ~[micrometer-observation-1.12.2.jar:1.12.2]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637) ~[spring-aop-6.1.3.jar:6.1.3]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:627) ~[spring-aop-6.1.3.jar:6.1.3]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71) ~[spring-aop-6.1.3.jar:6.1.3]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.3.jar:6.1.3]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765) ~[spring-aop-6.1.3.jar:6.1.3]
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123) ~[spring-tx-6.1.3.jar:6.1.3]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385) ~[spring-tx-6.1.3.jar:6.1.3]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.1.3.jar:6.1.3]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.3.jar:6.1.3]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765) ~[spring-aop-6.1.3.jar:6.1.3]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-6.1.3.jar:6.1.3]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.3.jar:6.1.3]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765) ~[spring-aop-6.1.3.jar:6.1.3]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717) ~[spring-aop-6.1.3.jar:6.1.3]
	at org.restaurant.service.RestaurantService$$SpringCGLIB$$0.createRestaurant(<generated>) ~[classes/:na]
	at org.restaurant.controller.RestaurantController.addRestaurant(RestaurantController.java:31) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:261) ~[spring-web-6.1.3.jar:6.1.3]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:189) ~[spring-web-6.1.3.jar:6.1.3]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.3.jar:6.1.3]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917) ~[spring-webmvc-6.1.3.jar:6.1.3]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829) ~[spring-webmvc-6.1.3.jar:6.1.3]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.3.jar:6.1.3]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.3.jar:6.1.3]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.3.jar:6.1.3]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.3.jar:6.1.3]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.1.3.jar:6.1.3]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.18.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.3.jar:6.1.3]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.18.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.18.jar:10.1.18]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.1.3.jar:6.1.3]
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91) ~[spring-web-6.1.3.jar:6.1.3]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.3.jar:6.1.3]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.3.jar:6.1.3]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.3.jar:6.1.3]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.3.jar:6.1.3]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.3.jar:6.1.3]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195) ~[spring-webmvc-6.1.3.jar:6.1.3]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.3.jar:6.1.3]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.1.3.jar:6.1.3]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225) ~[spring-security-config-6.2.1.jar:6.2.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352) ~[spring-web-6.1.3.jar:6.1.3]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268) ~[spring-web-6.1.3.jar:6.1.3]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.3.jar:6.1.3]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.3.jar:6.1.3]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.3.jar:6.1.3]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.3.jar:6.1.3]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109) ~[spring-web-6.1.3.jar:6.1.3]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.3.jar:6.1.3]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.3.jar:6.1.3]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.3.jar:6.1.3]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2024-11-17T11:30:56.689+01:00  INFO 28103 --- [restaurant-service] [http-nio-8080-exec-3] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.filterchains
2024-11-17T11:30:56.691+01:00  INFO 28103 --- [restaurant-service] [http-nio-8080-exec-3] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.authorizations
2024-11-17T11:30:56.696+01:00  INFO 28103 --- [restaurant-service] [http-nio-8080-exec-3] o.r.aspect.PerformanceTrackerHandler     : Error occurred Access is denied
2024-11-17T11:30:56.696+01:00  INFO 28103 --- [restaurant-service] [http-nio-8080-exec-3] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.authorizationsduration 4
2024-11-17T11:30:56.714+01:00  INFO 28103 --- [restaurant-service] [http-nio-8080-exec-3] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.filterchainsduration 24
2024-11-17T11:30:56.714+01:00  INFO 28103 --- [restaurant-service] [http-nio-8080-exec-3] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.filterchains
2024-11-17T11:30:56.714+01:00  INFO 28103 --- [restaurant-service] [http-nio-8080-exec-3] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.filterchainsduration 0
2024-11-17T11:31:08.929+01:00  INFO 28103 --- [restaurant-service] [http-nio-8080-exec-4] o.r.aspect.PerformanceTrackerHandler     : Execution started: http.server.requests
2024-11-17T11:31:08.935+01:00  INFO 28103 --- [restaurant-service] [http-nio-8080-exec-4] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.filterchains
2024-11-17T11:31:08.936+01:00  INFO 28103 --- [restaurant-service] [http-nio-8080-exec-4] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.authorizations
2024-11-17T11:31:08.938+01:00  INFO 28103 --- [restaurant-service] [http-nio-8080-exec-4] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.authorizationsduration 2
2024-11-17T11:31:08.939+01:00  INFO 28103 --- [restaurant-service] [http-nio-8080-exec-4] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.filterchainsduration 4
2024-11-17T11:31:08.940+01:00  INFO 28103 --- [restaurant-service] [http-nio-8080-exec-4] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.http.secured.requests
2024-11-17T11:31:08.967+01:00  INFO 28103 --- [restaurant-service] [http-nio-8080-exec-4] o.r.aspect.PerformanceTrackerHandler     : Execution started: create.restaurant
2024-11-17T11:31:08.990+01:00  INFO 28103 --- [restaurant-service] [http-nio-8080-exec-4] o.r.aspect.PerformanceTrackerHandler     : Error occurred Map with prices can't be empty
2024-11-17T11:31:08.990+01:00  INFO 28103 --- [restaurant-service] [http-nio-8080-exec-4] o.r.aspect.PerformanceTrackerHandler     : execution stopped create.restaurantduration 21
2024-11-17T11:31:08.993+01:00  INFO 28103 --- [restaurant-service] [http-nio-8080-exec-4] o.r.aspect.PerformanceTrackerHandler     : Error occurred Request processing failed: org.springframework.dao.InvalidDataAccessApiUsageException: Map with prices can't be empty
2024-11-17T11:31:08.994+01:00  INFO 28103 --- [restaurant-service] [http-nio-8080-exec-4] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.http.secured.requestsduration 54
2024-11-17T11:31:08.994+01:00  INFO 28103 --- [restaurant-service] [http-nio-8080-exec-4] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.filterchains
2024-11-17T11:31:08.994+01:00  INFO 28103 --- [restaurant-service] [http-nio-8080-exec-4] o.r.aspect.PerformanceTrackerHandler     : Error occurred Request processing failed: org.springframework.dao.InvalidDataAccessApiUsageException: Map with prices can't be empty
2024-11-17T11:31:08.994+01:00  INFO 28103 --- [restaurant-service] [http-nio-8080-exec-4] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.filterchainsduration 0
2024-11-17T11:31:08.994+01:00  INFO 28103 --- [restaurant-service] [http-nio-8080-exec-4] o.r.aspect.PerformanceTrackerHandler     : Error occurred Map with prices can't be empty
2024-11-17T11:31:08.995+01:00  INFO 28103 --- [restaurant-service] [http-nio-8080-exec-4] o.r.aspect.PerformanceTrackerHandler     : execution stopped http.server.requestsduration 64
2024-11-17T11:31:08.996+01:00 ERROR 28103 --- [restaurant-service] [http-nio-8080-exec-4] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.InvalidDataAccessApiUsageException: Map with prices can't be empty] with root cause

java.lang.IllegalStateException: Map with prices can't be empty
	at org.restaurant.model.MenuItemEntity.lambda$updateLowestPrice$0(MenuItemEntity.java:50) ~[classes/:na]
	at java.base/java.util.Optional.orElseThrow(Optional.java:403) ~[na:na]
	at org.restaurant.model.MenuItemEntity.updateLowestPrice(MenuItemEntity.java:50) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.hibernate.jpa.event.internal.EntityCallback.performCallback(EntityCallback.java:50) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.jpa.event.internal.CallbackRegistryImpl.callback(CallbackRegistryImpl.java:123) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.jpa.event.internal.CallbackRegistryImpl.preCreate(CallbackRegistryImpl.java:72) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:196) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:138) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:816) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:764) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.engine.spi.CascadingActions$7.cascade(CascadingActions.java:290) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.engine.spi.CascadingActions$7.cascade(CascadingActions.java:280) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.engine.internal.Cascade.cascadeToOne(Cascade.java:517) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.engine.internal.Cascade.cascadeAssociation(Cascade.java:439) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.engine.internal.Cascade.cascadeProperty(Cascade.java:224) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.engine.internal.Cascade.cascadeCollectionElements(Cascade.java:551) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.engine.internal.Cascade.cascadeCollection(Cascade.java:481) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.engine.internal.Cascade.cascadeAssociation(Cascade.java:442) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.engine.internal.Cascade.cascadeProperty(Cascade.java:224) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.engine.internal.Cascade.cascade(Cascade.java:157) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.event.internal.AbstractSaveEventListener.cascadeAfterSave(AbstractSaveEventListener.java:513) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:312) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:219) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:774) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:758) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364) ~[spring-orm-6.1.3.jar:6.1.3]
	at jdk.proxy2/jdk.proxy2.$Proxy186.persist(Unknown Source) ~[na:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:319) ~[spring-orm-6.1.3.jar:6.1.3]
	at jdk.proxy2/jdk.proxy2.$Proxy186.persist(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:618) ~[spring-data-jpa-3.2.2.jar:3.2.2]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:351) ~[spring-aop-6.1.3.jar:6.1.3]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.2.2.jar:3.2.2]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.2.2.jar:3.2.2]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.2.2.jar:3.2.2]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516) ~[spring-data-commons-3.2.2.jar:3.2.2]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285) ~[spring-data-commons-3.2.2.jar:3.2.2]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628) ~[spring-data-commons-3.2.2.jar:3.2.2]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.3.jar:6.1.3]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168) ~[spring-data-commons-3.2.2.jar:3.2.2]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143) ~[spring-data-commons-3.2.2.jar:3.2.2]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.3.jar:6.1.3]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70) ~[spring-data-commons-3.2.2.jar:3.2.2]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.3.jar:6.1.3]
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123) ~[spring-tx-6.1.3.jar:6.1.3]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385) ~[spring-tx-6.1.3.jar:6.1.3]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.1.3.jar:6.1.3]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.3.jar:6.1.3]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-6.1.3.jar:6.1.3]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.3.jar:6.1.3]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164) ~[spring-data-jpa-3.2.2.jar:3.2.2]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.3.jar:6.1.3]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-6.1.3.jar:6.1.3]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.3.jar:6.1.3]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:220) ~[spring-aop-6.1.3.jar:6.1.3]
	at jdk.proxy2/jdk.proxy2.$Proxy195.save(Unknown Source) ~[na:na]
	at org.restaurant.service.RestaurantService.createRestaurant(RestaurantService.java:72) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:351) ~[spring-aop-6.1.3.jar:6.1.3]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.1.3.jar:6.1.3]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.1.3.jar:6.1.3]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765) ~[spring-aop-6.1.3.jar:6.1.3]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89) ~[spring-aop-6.1.3.jar:6.1.3]
	at io.micrometer.observation.aop.ObservedAspect.lambda$observe$2(ObservedAspect.java:150) ~[micrometer-observation-1.12.2.jar:1.12.2]
	at io.micrometer.observation.Observation.observeChecked(Observation.java:600) ~[micrometer-observation-1.12.2.jar:1.12.2]
	at io.micrometer.observation.aop.ObservedAspect.observe(ObservedAspect.java:150) ~[micrometer-observation-1.12.2.jar:1.12.2]
	at io.micrometer.observation.aop.ObservedAspect.observeMethod(ObservedAspect.java:128) ~[micrometer-observation-1.12.2.jar:1.12.2]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637) ~[spring-aop-6.1.3.jar:6.1.3]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:627) ~[spring-aop-6.1.3.jar:6.1.3]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71) ~[spring-aop-6.1.3.jar:6.1.3]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.3.jar:6.1.3]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765) ~[spring-aop-6.1.3.jar:6.1.3]
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123) ~[spring-tx-6.1.3.jar:6.1.3]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385) ~[spring-tx-6.1.3.jar:6.1.3]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.1.3.jar:6.1.3]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.3.jar:6.1.3]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765) ~[spring-aop-6.1.3.jar:6.1.3]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-6.1.3.jar:6.1.3]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.3.jar:6.1.3]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765) ~[spring-aop-6.1.3.jar:6.1.3]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717) ~[spring-aop-6.1.3.jar:6.1.3]
	at org.restaurant.service.RestaurantService$$SpringCGLIB$$0.createRestaurant(<generated>) ~[classes/:na]
	at org.restaurant.controller.RestaurantController.addRestaurant(RestaurantController.java:31) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:261) ~[spring-web-6.1.3.jar:6.1.3]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:189) ~[spring-web-6.1.3.jar:6.1.3]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.3.jar:6.1.3]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917) ~[spring-webmvc-6.1.3.jar:6.1.3]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829) ~[spring-webmvc-6.1.3.jar:6.1.3]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.3.jar:6.1.3]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.3.jar:6.1.3]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.3.jar:6.1.3]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.3.jar:6.1.3]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.1.3.jar:6.1.3]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.18.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.3.jar:6.1.3]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.18.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.18.jar:10.1.18]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.1.3.jar:6.1.3]
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91) ~[spring-web-6.1.3.jar:6.1.3]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.3.jar:6.1.3]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.3.jar:6.1.3]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.3.jar:6.1.3]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.3.jar:6.1.3]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.3.jar:6.1.3]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195) ~[spring-webmvc-6.1.3.jar:6.1.3]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.3.jar:6.1.3]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.1.3.jar:6.1.3]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225) ~[spring-security-config-6.2.1.jar:6.2.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352) ~[spring-web-6.1.3.jar:6.1.3]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268) ~[spring-web-6.1.3.jar:6.1.3]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.3.jar:6.1.3]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.3.jar:6.1.3]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.3.jar:6.1.3]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.3.jar:6.1.3]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109) ~[spring-web-6.1.3.jar:6.1.3]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.3.jar:6.1.3]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.3.jar:6.1.3]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.3.jar:6.1.3]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2024-11-17T11:31:09.003+01:00  INFO 28103 --- [restaurant-service] [http-nio-8080-exec-4] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.filterchains
2024-11-17T11:31:09.005+01:00  INFO 28103 --- [restaurant-service] [http-nio-8080-exec-4] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.authorizations
2024-11-17T11:31:09.006+01:00  INFO 28103 --- [restaurant-service] [http-nio-8080-exec-4] o.r.aspect.PerformanceTrackerHandler     : Error occurred Access is denied
2024-11-17T11:31:09.006+01:00  INFO 28103 --- [restaurant-service] [http-nio-8080-exec-4] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.authorizationsduration 0
2024-11-17T11:31:09.009+01:00  INFO 28103 --- [restaurant-service] [http-nio-8080-exec-4] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.filterchainsduration 4
2024-11-17T11:31:09.009+01:00  INFO 28103 --- [restaurant-service] [http-nio-8080-exec-4] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.filterchains
2024-11-17T11:31:09.009+01:00  INFO 28103 --- [restaurant-service] [http-nio-8080-exec-4] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.filterchainsduration 0
2024-11-17T11:32:22.978+01:00  INFO 28103 --- [restaurant-service] [SpringApplicationShutdownHook] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application RESTAURANT-SERVICE with eureka with status DOWN
2024-11-17T11:32:22.981+01:00  INFO 28103 --- [restaurant-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1731839542981, current=DOWN, previous=UP]
2024-11-17T11:32:22.982+01:00  INFO 28103 --- [restaurant-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_RESTAURANT-SERVICE/192.168.0.129:restaurant-service: registering service...
2024-11-17T11:32:23.023+01:00  INFO 28103 --- [restaurant-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_RESTAURANT-SERVICE/192.168.0.129:restaurant-service - registration status: 204
2024-11-17T11:32:23.055+01:00  INFO 28103 --- [restaurant-service] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-11-17T11:32:23.068+01:00  INFO 28103 --- [restaurant-service] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-11-17T11:32:23.074+01:00  INFO 28103 --- [restaurant-service] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-11-17T11:32:23.084+01:00  INFO 28103 --- [restaurant-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2024-11-17T11:32:26.096+01:00  INFO 28103 --- [restaurant-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2024-11-17T11:32:26.113+01:00  INFO 28103 --- [restaurant-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_RESTAURANT-SERVICE/192.168.0.129:restaurant-service - deregister  status: 200
2024-11-17T11:32:26.122+01:00  INFO 28103 --- [restaurant-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2024-11-17T11:34:27.181+01:00  INFO 28874 --- [restaurant-service] [main] org.restaurant.RestaurantApplication     : Starting RestaurantApplication using Java 21.0.3 with PID 28874 (/Users/jakubsokol/feasto-app-main/feasto-backend/restaurant/target/classes started by jakubsokol in /Users/jakubsokol/feasto-app-main/feasto-backend)
2024-11-17T11:34:27.183+01:00  INFO 28874 --- [restaurant-service] [main] org.restaurant.RestaurantApplication     : No active profile set, falling back to 1 default profile: "default"
2024-11-17T11:34:28.582+01:00  INFO 28874 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-17T11:34:28.583+01:00  INFO 28874 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2024-11-17T11:34:28.618+01:00  INFO 28874 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.LocationRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-11-17T11:34:28.620+01:00  INFO 28874 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.MenuItemRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-11-17T11:34:28.620+01:00  INFO 28874 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.RatingRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-11-17T11:34:28.621+01:00  INFO 28874 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.RestaurantRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-11-17T11:34:28.621+01:00  INFO 28874 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.UserFavoriteRestaurantRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-11-17T11:34:28.699+01:00  INFO 28874 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 113 ms. Found 1 Elasticsearch repository interface.
2024-11-17T11:34:28.707+01:00  INFO 28874 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-17T11:34:28.707+01:00  INFO 28874 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2024-11-17T11:34:28.712+01:00  INFO 28874 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.LocationRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-11-17T11:34:28.714+01:00  INFO 28874 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.MenuItemRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-11-17T11:34:28.714+01:00  INFO 28874 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.RatingRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-11-17T11:34:28.714+01:00  INFO 28874 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.RestaurantRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-11-17T11:34:28.714+01:00  INFO 28874 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.UserFavoriteRestaurantRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-11-17T11:34:28.716+01:00  INFO 28874 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 8 ms. Found 0 Reactive Elasticsearch repository interfaces.
2024-11-17T11:34:28.722+01:00  INFO 28874 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-17T11:34:28.723+01:00  INFO 28874 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-17T11:34:28.735+01:00  INFO 28874 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.elasticsearch.ElasticRestaurantRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-11-17T11:34:28.745+01:00  INFO 28874 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 20 ms. Found 5 JPA repository interfaces.
2024-11-17T11:34:29.122+01:00  INFO 28874 --- [restaurant-service] [main] o.s.cloud.context.scope.GenericScope     : BeanFactory id=13877953-4ae2-31cd-942b-2d1b491df221
2024-11-17T11:34:29.748+01:00  WARN 28874 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-11-17T11:34:29.762+01:00  WARN 28874 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:34:29.771+01:00  WARN 28874 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:34:29.783+01:00  WARN 28874 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:34:29.788+01:00  WARN 28874 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:34:29.791+01:00  WARN 28874 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x0000000124575d80] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:34:29.801+01:00  WARN 28874 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:34:29.825+01:00  WARN 28874 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:34:29.836+01:00  WARN 28874 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:34:29.842+01:00  WARN 28874 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:34:29.844+01:00  WARN 28874 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:34:29.846+01:00  WARN 28874 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:34:29.857+01:00  WARN 28874 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:34:29.868+01:00  WARN 28874 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:34:29.871+01:00  WARN 28874 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:34:29.874+01:00  WARN 28874 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:34:29.877+01:00  WARN 28874 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:34:29.879+01:00  WARN 28874 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:34:29.886+01:00  WARN 28874 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancedRetryFactory' of type [org.springframework.cloud.loadbalancer.blocking.retry.BlockingLoadBalancedRetryFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:34:29.891+01:00  WARN 28874 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:34:29.898+01:00  WARN 28874 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-11-17T11:34:29.900+01:00  WARN 28874 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:34:29.902+01:00  WARN 28874 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:34:30.163+01:00  INFO 28874 --- [restaurant-service] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-11-17T11:34:30.172+01:00  INFO 28874 --- [restaurant-service] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-11-17T11:34:30.172+01:00  INFO 28874 --- [restaurant-service] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.18]
2024-11-17T11:34:30.213+01:00  INFO 28874 --- [restaurant-service] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-11-17T11:34:30.213+01:00  INFO 28874 --- [restaurant-service] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2971 ms
2024-11-17T11:34:30.647+01:00  INFO 28874 --- [restaurant-service] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-17T11:34:30.678+01:00  INFO 28874 --- [restaurant-service] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.4.1.Final
2024-11-17T11:34:30.694+01:00  INFO 28874 --- [restaurant-service] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-11-17T11:34:30.811+01:00  INFO 28874 --- [restaurant-service] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-11-17T11:34:30.825+01:00  INFO 28874 --- [restaurant-service] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-11-17T11:34:30.940+01:00  INFO 28874 --- [restaurant-service] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1db5de29
2024-11-17T11:34:30.941+01:00  INFO 28874 --- [restaurant-service] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-11-17T11:34:30.964+01:00  WARN 28874 --- [restaurant-service] [main] org.hibernate.orm.deprecation            : HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-11-17T11:34:31.952+01:00  INFO 28874 --- [restaurant-service] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-11-17T11:34:32.063+01:00  INFO 28874 --- [restaurant-service] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-11-17T11:34:34.248+01:00  WARN 28874 --- [restaurant-service] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-11-17T11:34:34.301+01:00  WARN 28874 --- [restaurant-service] [main] .s.s.UserDetailsServiceAutoConfiguration : 

Using generated security password: 92e55a13-53f3-425f-aae0-3ade64d914b2

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2024-11-17T11:34:35.361+01:00  INFO 28874 --- [restaurant-service] [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 25 endpoint(s) beneath base path '/actuator'
2024-11-17T11:34:35.461+01:00  INFO 28874 --- [restaurant-service] [main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@1ba7b274, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4608a871, org.springframework.security.web.context.SecurityContextHolderFilter@70fc5fec, org.springframework.security.web.header.HeaderWriterFilter@1eb85e83, org.springframework.web.filter.CorsFilter@2248583e, org.springframework.security.web.authentication.logout.LogoutFilter@2771025a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@34668a96, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4c44928e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1dfd27fe, org.springframework.security.web.access.ExceptionTranslationFilter@129df247, org.springframework.security.web.access.intercept.AuthorizationFilter@f22cf0e]
2024-11-17T11:34:36.545+01:00  INFO 28874 --- [restaurant-service] [main] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2024-11-17T11:34:36.597+01:00  WARN 28874 --- [restaurant-service] [main] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-11-17T11:34:36.678+01:00  INFO 28874 --- [restaurant-service] [main] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2024-11-17T11:34:36.706+01:00  INFO 28874 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2024-11-17T11:34:36.710+01:00  INFO 28874 --- [restaurant-service] [main] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-11-17T11:34:36.724+01:00  INFO 28874 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-11-17T11:34:36.724+01:00  INFO 28874 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-11-17T11:34:36.724+01:00  INFO 28874 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-11-17T11:34:36.724+01:00  INFO 28874 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-11-17T11:34:36.725+01:00  INFO 28874 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-11-17T11:34:36.725+01:00  INFO 28874 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2024-11-17T11:34:36.725+01:00  INFO 28874 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-11-17T11:34:36.928+01:00  INFO 28874 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-11-17T11:34:36.931+01:00  INFO 28874 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2024-11-17T11:34:36.932+01:00  INFO 28874 --- [restaurant-service] [main] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-11-17T11:34:36.936+01:00  INFO 28874 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1731839676936 with initial instances count: 2
2024-11-17T11:34:36.945+01:00  INFO 28874 --- [restaurant-service] [main] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application RESTAURANT-SERVICE with eureka with status UP
2024-11-17T11:34:36.945+01:00  INFO 28874 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1731839676945, current=UP, previous=STARTING]
2024-11-17T11:34:36.946+01:00  INFO 28874 --- [restaurant-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_RESTAURANT-SERVICE/192.168.0.129:restaurant-service: registering service...
2024-11-17T11:34:36.966+01:00  INFO 28874 --- [restaurant-service] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path ''
2024-11-17T11:34:36.968+01:00  INFO 28874 --- [restaurant-service] [main] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 8080
2024-11-17T11:34:36.997+01:00  INFO 28874 --- [restaurant-service] [main] org.restaurant.RestaurantApplication     : Started RestaurantApplication in 10.376 seconds (process running for 11.259)
2024-11-17T11:34:37.000+01:00  INFO 28874 --- [restaurant-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_RESTAURANT-SERVICE/192.168.0.129:restaurant-service - registration status: 204
2024-11-17T11:34:37.000+01:00  INFO 28874 --- [restaurant-service] [scheduling-1] o.r.aspect.PerformanceTrackerHandler     : Execution started: tasks.scheduled.execution
2024-11-17T11:34:37.210+01:00  INFO 28874 --- [restaurant-service] [scheduling-1] o.r.aspect.PerformanceTrackerHandler     : execution stopped tasks.scheduled.executionduration 209
2024-11-17T11:34:37.673+01:00  INFO 28874 --- [restaurant-service] [RMI TCP Connection(4)-127.0.0.1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-11-17T11:34:37.674+01:00  INFO 28874 --- [restaurant-service] [RMI TCP Connection(4)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-11-17T11:34:37.675+01:00  INFO 28874 --- [restaurant-service] [RMI TCP Connection(4)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-11-17T11:35:43.873+01:00  INFO 28874 --- [restaurant-service] [SpringApplicationShutdownHook] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application RESTAURANT-SERVICE with eureka with status DOWN
2024-11-17T11:35:43.881+01:00  INFO 28874 --- [restaurant-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1731839743881, current=DOWN, previous=UP]
2024-11-17T11:35:43.881+01:00  INFO 28874 --- [restaurant-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_RESTAURANT-SERVICE/192.168.0.129:restaurant-service: registering service...
2024-11-17T11:35:43.899+01:00  INFO 28874 --- [restaurant-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_RESTAURANT-SERVICE/192.168.0.129:restaurant-service - registration status: 204
2024-11-17T11:35:43.957+01:00  INFO 28874 --- [restaurant-service] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-11-17T11:35:43.962+01:00  INFO 28874 --- [restaurant-service] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-11-17T11:35:43.966+01:00  INFO 28874 --- [restaurant-service] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-11-17T11:35:43.967+01:00  INFO 28874 --- [restaurant-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2024-11-17T11:35:46.986+01:00  INFO 28874 --- [restaurant-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2024-11-17T11:35:47.004+01:00  INFO 28874 --- [restaurant-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_RESTAURANT-SERVICE/192.168.0.129:restaurant-service - deregister  status: 200
2024-11-17T11:35:47.019+01:00  INFO 28874 --- [restaurant-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2024-11-17T11:35:54.829+01:00  INFO 28966 --- [restaurant-service] [main] org.restaurant.RestaurantApplication     : Starting RestaurantApplication using Java 21.0.3 with PID 28966 (/Users/jakubsokol/feasto-app-main/feasto-backend/restaurant/target/classes started by jakubsokol in /Users/jakubsokol/feasto-app-main/feasto-backend)
2024-11-17T11:35:54.831+01:00  INFO 28966 --- [restaurant-service] [main] org.restaurant.RestaurantApplication     : No active profile set, falling back to 1 default profile: "default"
2024-11-17T11:35:56.262+01:00  INFO 28966 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-17T11:35:56.265+01:00  INFO 28966 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2024-11-17T11:35:56.315+01:00  INFO 28966 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.LocationRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-11-17T11:35:56.317+01:00  INFO 28966 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.MenuItemRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-11-17T11:35:56.317+01:00  INFO 28966 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.RatingRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-11-17T11:35:56.319+01:00  INFO 28966 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.RestaurantRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-11-17T11:35:56.319+01:00  INFO 28966 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.UserFavoriteRestaurantRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-11-17T11:35:56.398+01:00  INFO 28966 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 130 ms. Found 1 Elasticsearch repository interface.
2024-11-17T11:35:56.410+01:00  INFO 28966 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-17T11:35:56.410+01:00  INFO 28966 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2024-11-17T11:35:56.415+01:00  INFO 28966 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.LocationRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-11-17T11:35:56.417+01:00  INFO 28966 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.MenuItemRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-11-17T11:35:56.417+01:00  INFO 28966 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.RatingRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-11-17T11:35:56.417+01:00  INFO 28966 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.RestaurantRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-11-17T11:35:56.417+01:00  INFO 28966 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.UserFavoriteRestaurantRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-11-17T11:35:56.420+01:00  INFO 28966 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 9 ms. Found 0 Reactive Elasticsearch repository interfaces.
2024-11-17T11:35:56.426+01:00  INFO 28966 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-17T11:35:56.426+01:00  INFO 28966 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-17T11:35:56.438+01:00  INFO 28966 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.elasticsearch.ElasticRestaurantRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-11-17T11:35:56.448+01:00  INFO 28966 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 20 ms. Found 5 JPA repository interfaces.
2024-11-17T11:35:56.830+01:00  INFO 28966 --- [restaurant-service] [main] o.s.cloud.context.scope.GenericScope     : BeanFactory id=13877953-4ae2-31cd-942b-2d1b491df221
2024-11-17T11:35:57.424+01:00  WARN 28966 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-11-17T11:35:57.432+01:00  WARN 28966 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:35:57.445+01:00  WARN 28966 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:35:57.457+01:00  WARN 28966 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:35:57.463+01:00  WARN 28966 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:35:57.465+01:00  WARN 28966 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x0000000120576608] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:35:57.476+01:00  WARN 28966 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:35:57.500+01:00  WARN 28966 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:35:57.511+01:00  WARN 28966 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:35:57.517+01:00  WARN 28966 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:35:57.519+01:00  WARN 28966 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:35:57.521+01:00  WARN 28966 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:35:57.532+01:00  WARN 28966 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:35:57.543+01:00  WARN 28966 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:35:57.546+01:00  WARN 28966 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:35:57.548+01:00  WARN 28966 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:35:57.551+01:00  WARN 28966 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:35:57.554+01:00  WARN 28966 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:35:57.561+01:00  WARN 28966 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancedRetryFactory' of type [org.springframework.cloud.loadbalancer.blocking.retry.BlockingLoadBalancedRetryFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:35:57.566+01:00  WARN 28966 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:35:57.573+01:00  WARN 28966 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-11-17T11:35:57.575+01:00  WARN 28966 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:35:57.577+01:00  WARN 28966 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:35:57.838+01:00  INFO 28966 --- [restaurant-service] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-11-17T11:35:57.847+01:00  INFO 28966 --- [restaurant-service] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-11-17T11:35:57.847+01:00  INFO 28966 --- [restaurant-service] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.18]
2024-11-17T11:35:57.889+01:00  INFO 28966 --- [restaurant-service] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-11-17T11:35:57.889+01:00  INFO 28966 --- [restaurant-service] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3002 ms
2024-11-17T11:35:58.313+01:00  INFO 28966 --- [restaurant-service] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-17T11:35:58.339+01:00  INFO 28966 --- [restaurant-service] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.4.1.Final
2024-11-17T11:35:58.354+01:00  INFO 28966 --- [restaurant-service] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-11-17T11:35:58.459+01:00  INFO 28966 --- [restaurant-service] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-11-17T11:35:58.473+01:00  INFO 28966 --- [restaurant-service] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-11-17T11:35:58.602+01:00  INFO 28966 --- [restaurant-service] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1771d6a5
2024-11-17T11:35:58.603+01:00  INFO 28966 --- [restaurant-service] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-11-17T11:35:58.625+01:00  WARN 28966 --- [restaurant-service] [main] org.hibernate.orm.deprecation            : HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-11-17T11:35:59.597+01:00  INFO 28966 --- [restaurant-service] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-11-17T11:35:59.725+01:00  INFO 28966 --- [restaurant-service] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-11-17T11:36:01.940+01:00  WARN 28966 --- [restaurant-service] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-11-17T11:36:01.989+01:00  WARN 28966 --- [restaurant-service] [main] .s.s.UserDetailsServiceAutoConfiguration : 

Using generated security password: bb58cc97-3661-4b84-ba6a-b8ad6953cc39

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2024-11-17T11:36:03.235+01:00  INFO 28966 --- [restaurant-service] [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 25 endpoint(s) beneath base path '/actuator'
2024-11-17T11:36:03.333+01:00  INFO 28966 --- [restaurant-service] [main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@b95e63a, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2a6e710e, org.springframework.security.web.context.SecurityContextHolderFilter@298517d1, org.springframework.security.web.header.HeaderWriterFilter@6c769cd8, org.springframework.web.filter.CorsFilter@4a281ae0, org.springframework.security.web.authentication.logout.LogoutFilter@676a2d36, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@602621bb, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7d9a7fd8, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@55c445e5, org.springframework.security.web.access.ExceptionTranslationFilter@75f27234, org.springframework.security.web.access.intercept.AuthorizationFilter@90d4173]
2024-11-17T11:36:04.477+01:00  INFO 28966 --- [restaurant-service] [main] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2024-11-17T11:36:04.532+01:00  WARN 28966 --- [restaurant-service] [main] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-11-17T11:36:04.632+01:00  INFO 28966 --- [restaurant-service] [main] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2024-11-17T11:36:04.662+01:00  INFO 28966 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2024-11-17T11:36:04.666+01:00  INFO 28966 --- [restaurant-service] [main] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-11-17T11:36:04.681+01:00  INFO 28966 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-11-17T11:36:04.681+01:00  INFO 28966 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-11-17T11:36:04.682+01:00  INFO 28966 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-11-17T11:36:04.682+01:00  INFO 28966 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-11-17T11:36:04.682+01:00  INFO 28966 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-11-17T11:36:04.682+01:00  INFO 28966 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2024-11-17T11:36:04.682+01:00  INFO 28966 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-11-17T11:36:04.891+01:00  INFO 28966 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-11-17T11:36:04.893+01:00  INFO 28966 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2024-11-17T11:36:04.894+01:00  INFO 28966 --- [restaurant-service] [main] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-11-17T11:36:04.898+01:00  INFO 28966 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1731839764898 with initial instances count: 3
2024-11-17T11:36:04.909+01:00  INFO 28966 --- [restaurant-service] [main] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application RESTAURANT-SERVICE with eureka with status UP
2024-11-17T11:36:04.909+01:00  INFO 28966 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1731839764909, current=UP, previous=STARTING]
2024-11-17T11:36:04.910+01:00  INFO 28966 --- [restaurant-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_RESTAURANT-SERVICE/192.168.0.129:restaurant-service: registering service...
2024-11-17T11:36:04.924+01:00  INFO 28966 --- [restaurant-service] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path ''
2024-11-17T11:36:04.926+01:00  INFO 28966 --- [restaurant-service] [main] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 8080
2024-11-17T11:36:04.953+01:00  INFO 28966 --- [restaurant-service] [main] org.restaurant.RestaurantApplication     : Started RestaurantApplication in 10.67 seconds (process running for 11.596)
2024-11-17T11:36:04.956+01:00  INFO 28966 --- [restaurant-service] [scheduling-1] o.r.aspect.PerformanceTrackerHandler     : Execution started: tasks.scheduled.execution
2024-11-17T11:36:04.957+01:00  INFO 28966 --- [restaurant-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_RESTAURANT-SERVICE/192.168.0.129:restaurant-service - registration status: 204
2024-11-17T11:36:05.232+01:00  INFO 28966 --- [restaurant-service] [scheduling-1] o.r.aspect.PerformanceTrackerHandler     : execution stopped tasks.scheduled.executionduration 275
2024-11-17T11:36:05.520+01:00  INFO 28966 --- [restaurant-service] [RMI TCP Connection(2)-127.0.0.1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-11-17T11:36:05.521+01:00  INFO 28966 --- [restaurant-service] [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-11-17T11:36:05.522+01:00  INFO 28966 --- [restaurant-service] [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-11-17T11:36:43.876+01:00  INFO 28966 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : Execution started: http.server.requests
2024-11-17T11:36:43.893+01:00  INFO 28966 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.filterchains
2024-11-17T11:36:43.901+01:00  INFO 28966 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.authorizations
2024-11-17T11:36:43.902+01:00  INFO 28966 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.authorizationsduration 1
2024-11-17T11:36:43.903+01:00  INFO 28966 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.filterchainsduration 10
2024-11-17T11:36:43.904+01:00  INFO 28966 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.http.secured.requests
2024-11-17T11:36:43.957+01:00  INFO 28966 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : Execution started: create.restaurant
2024-11-17T11:36:44.174+01:00  INFO 28966 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : Error occurred Map with prices can't be empty
2024-11-17T11:36:44.174+01:00  INFO 28966 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : execution stopped create.restaurantduration 217
2024-11-17T11:36:44.179+01:00  INFO 28966 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : Error occurred Request processing failed: org.springframework.dao.InvalidDataAccessApiUsageException: Map with prices can't be empty
2024-11-17T11:36:44.179+01:00  INFO 28966 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.http.secured.requestsduration 275
2024-11-17T11:36:44.179+01:00  INFO 28966 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.filterchains
2024-11-17T11:36:44.180+01:00  INFO 28966 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : Error occurred Request processing failed: org.springframework.dao.InvalidDataAccessApiUsageException: Map with prices can't be empty
2024-11-17T11:36:44.180+01:00  INFO 28966 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.filterchainsduration 1
2024-11-17T11:36:44.180+01:00  INFO 28966 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : Error occurred Map with prices can't be empty
2024-11-17T11:36:44.180+01:00  INFO 28966 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : execution stopped http.server.requestsduration 303
2024-11-17T11:36:44.181+01:00 ERROR 28966 --- [restaurant-service] [http-nio-8080-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.InvalidDataAccessApiUsageException: Map with prices can't be empty] with root cause

java.lang.IllegalStateException: Map with prices can't be empty
	at org.restaurant.model.MenuItemEntity.lambda$updateLowestPrice$0(MenuItemEntity.java:50) ~[classes/:na]
	at java.base/java.util.Optional.orElseThrow(Optional.java:403) ~[na:na]
	at org.restaurant.model.MenuItemEntity.updateLowestPrice(MenuItemEntity.java:50) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.hibernate.jpa.event.internal.EntityCallback.performCallback(EntityCallback.java:50) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.jpa.event.internal.CallbackRegistryImpl.callback(CallbackRegistryImpl.java:123) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.jpa.event.internal.CallbackRegistryImpl.preCreate(CallbackRegistryImpl.java:72) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:196) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:138) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:816) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:764) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.engine.spi.CascadingActions$7.cascade(CascadingActions.java:290) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.engine.spi.CascadingActions$7.cascade(CascadingActions.java:280) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.engine.internal.Cascade.cascadeToOne(Cascade.java:517) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.engine.internal.Cascade.cascadeAssociation(Cascade.java:439) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.engine.internal.Cascade.cascadeProperty(Cascade.java:224) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.engine.internal.Cascade.cascadeCollectionElements(Cascade.java:551) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.engine.internal.Cascade.cascadeCollection(Cascade.java:481) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.engine.internal.Cascade.cascadeAssociation(Cascade.java:442) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.engine.internal.Cascade.cascadeProperty(Cascade.java:224) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.engine.internal.Cascade.cascade(Cascade.java:157) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.event.internal.AbstractSaveEventListener.cascadeAfterSave(AbstractSaveEventListener.java:513) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:312) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:219) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:774) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:758) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364) ~[spring-orm-6.1.3.jar:6.1.3]
	at jdk.proxy2/jdk.proxy2.$Proxy185.persist(Unknown Source) ~[na:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:319) ~[spring-orm-6.1.3.jar:6.1.3]
	at jdk.proxy2/jdk.proxy2.$Proxy185.persist(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:618) ~[spring-data-jpa-3.2.2.jar:3.2.2]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:351) ~[spring-aop-6.1.3.jar:6.1.3]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.2.2.jar:3.2.2]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.2.2.jar:3.2.2]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.2.2.jar:3.2.2]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516) ~[spring-data-commons-3.2.2.jar:3.2.2]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285) ~[spring-data-commons-3.2.2.jar:3.2.2]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628) ~[spring-data-commons-3.2.2.jar:3.2.2]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.3.jar:6.1.3]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168) ~[spring-data-commons-3.2.2.jar:3.2.2]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143) ~[spring-data-commons-3.2.2.jar:3.2.2]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.3.jar:6.1.3]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70) ~[spring-data-commons-3.2.2.jar:3.2.2]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.3.jar:6.1.3]
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123) ~[spring-tx-6.1.3.jar:6.1.3]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385) ~[spring-tx-6.1.3.jar:6.1.3]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.1.3.jar:6.1.3]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.3.jar:6.1.3]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-6.1.3.jar:6.1.3]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.3.jar:6.1.3]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164) ~[spring-data-jpa-3.2.2.jar:3.2.2]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.3.jar:6.1.3]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-6.1.3.jar:6.1.3]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.3.jar:6.1.3]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:220) ~[spring-aop-6.1.3.jar:6.1.3]
	at jdk.proxy2/jdk.proxy2.$Proxy194.save(Unknown Source) ~[na:na]
	at org.restaurant.service.RestaurantService.createRestaurant(RestaurantService.java:71) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:351) ~[spring-aop-6.1.3.jar:6.1.3]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.1.3.jar:6.1.3]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.1.3.jar:6.1.3]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765) ~[spring-aop-6.1.3.jar:6.1.3]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89) ~[spring-aop-6.1.3.jar:6.1.3]
	at io.micrometer.observation.aop.ObservedAspect.lambda$observe$2(ObservedAspect.java:150) ~[micrometer-observation-1.12.2.jar:1.12.2]
	at io.micrometer.observation.Observation.observeChecked(Observation.java:600) ~[micrometer-observation-1.12.2.jar:1.12.2]
	at io.micrometer.observation.aop.ObservedAspect.observe(ObservedAspect.java:150) ~[micrometer-observation-1.12.2.jar:1.12.2]
	at io.micrometer.observation.aop.ObservedAspect.observeMethod(ObservedAspect.java:128) ~[micrometer-observation-1.12.2.jar:1.12.2]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637) ~[spring-aop-6.1.3.jar:6.1.3]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:627) ~[spring-aop-6.1.3.jar:6.1.3]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71) ~[spring-aop-6.1.3.jar:6.1.3]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.3.jar:6.1.3]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765) ~[spring-aop-6.1.3.jar:6.1.3]
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123) ~[spring-tx-6.1.3.jar:6.1.3]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385) ~[spring-tx-6.1.3.jar:6.1.3]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.1.3.jar:6.1.3]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.3.jar:6.1.3]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765) ~[spring-aop-6.1.3.jar:6.1.3]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-6.1.3.jar:6.1.3]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.3.jar:6.1.3]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765) ~[spring-aop-6.1.3.jar:6.1.3]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717) ~[spring-aop-6.1.3.jar:6.1.3]
	at org.restaurant.service.RestaurantService$$SpringCGLIB$$0.createRestaurant(<generated>) ~[classes/:na]
	at org.restaurant.controller.RestaurantController.addRestaurant(RestaurantController.java:31) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:261) ~[spring-web-6.1.3.jar:6.1.3]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:189) ~[spring-web-6.1.3.jar:6.1.3]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.3.jar:6.1.3]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917) ~[spring-webmvc-6.1.3.jar:6.1.3]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829) ~[spring-webmvc-6.1.3.jar:6.1.3]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.3.jar:6.1.3]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.3.jar:6.1.3]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.3.jar:6.1.3]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.3.jar:6.1.3]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.1.3.jar:6.1.3]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.18.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.3.jar:6.1.3]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.18.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.18.jar:10.1.18]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.1.3.jar:6.1.3]
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91) ~[spring-web-6.1.3.jar:6.1.3]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.3.jar:6.1.3]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.3.jar:6.1.3]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.3.jar:6.1.3]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.3.jar:6.1.3]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.3.jar:6.1.3]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195) ~[spring-webmvc-6.1.3.jar:6.1.3]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.3.jar:6.1.3]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.1.3.jar:6.1.3]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225) ~[spring-security-config-6.2.1.jar:6.2.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352) ~[spring-web-6.1.3.jar:6.1.3]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268) ~[spring-web-6.1.3.jar:6.1.3]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.3.jar:6.1.3]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.3.jar:6.1.3]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.3.jar:6.1.3]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.3.jar:6.1.3]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109) ~[spring-web-6.1.3.jar:6.1.3]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.3.jar:6.1.3]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.3.jar:6.1.3]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.3.jar:6.1.3]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2024-11-17T11:36:44.190+01:00  INFO 28966 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.filterchains
2024-11-17T11:36:44.191+01:00  INFO 28966 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.authorizations
2024-11-17T11:36:44.194+01:00  INFO 28966 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : Error occurred Access is denied
2024-11-17T11:36:44.194+01:00  INFO 28966 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.authorizationsduration 3
2024-11-17T11:36:44.208+01:00  INFO 28966 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.filterchainsduration 18
2024-11-17T11:36:44.209+01:00  INFO 28966 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.filterchains
2024-11-17T11:36:44.209+01:00  INFO 28966 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.filterchainsduration 0
2024-11-17T11:41:04.702+01:00  INFO 28966 --- [restaurant-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-11-17T11:42:13.154+01:00  INFO 28966 --- [restaurant-service] [SpringApplicationShutdownHook] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application RESTAURANT-SERVICE with eureka with status DOWN
2024-11-17T11:42:13.155+01:00  INFO 28966 --- [restaurant-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1731840133155, current=DOWN, previous=UP]
2024-11-17T11:42:13.155+01:00  INFO 28966 --- [restaurant-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_RESTAURANT-SERVICE/192.168.0.129:restaurant-service: registering service...
2024-11-17T11:42:13.179+01:00  INFO 28966 --- [restaurant-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_RESTAURANT-SERVICE/192.168.0.129:restaurant-service - registration status: 204
2024-11-17T11:42:13.545+01:00  INFO 28966 --- [restaurant-service] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-11-17T11:42:13.555+01:00  INFO 28966 --- [restaurant-service] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-11-17T11:42:13.572+01:00  INFO 28966 --- [restaurant-service] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-11-17T11:42:13.573+01:00  INFO 28966 --- [restaurant-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2024-11-17T11:42:16.604+01:00  INFO 28966 --- [restaurant-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2024-11-17T11:42:16.659+01:00  INFO 28966 --- [restaurant-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_RESTAURANT-SERVICE/192.168.0.129:restaurant-service - deregister  status: 200
2024-11-17T11:42:16.669+01:00  INFO 28966 --- [restaurant-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2024-11-17T11:42:21.766+01:00  INFO 29133 --- [restaurant-service] [main] org.restaurant.RestaurantApplication     : Starting RestaurantApplication using Java 21.0.3 with PID 29133 (/Users/jakubsokol/feasto-app-main/feasto-backend/restaurant/target/classes started by jakubsokol in /Users/jakubsokol/feasto-app-main/feasto-backend)
2024-11-17T11:42:21.768+01:00  INFO 29133 --- [restaurant-service] [main] org.restaurant.RestaurantApplication     : No active profile set, falling back to 1 default profile: "default"
2024-11-17T11:42:23.269+01:00  INFO 29133 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-17T11:42:23.271+01:00  INFO 29133 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2024-11-17T11:42:23.315+01:00  INFO 29133 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.LocationRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-11-17T11:42:23.317+01:00  INFO 29133 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.MenuItemRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-11-17T11:42:23.317+01:00  INFO 29133 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.RatingRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-11-17T11:42:23.318+01:00  INFO 29133 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.RestaurantRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-11-17T11:42:23.319+01:00  INFO 29133 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.UserFavoriteRestaurantRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-11-17T11:42:23.391+01:00  INFO 29133 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 118 ms. Found 1 Elasticsearch repository interface.
2024-11-17T11:42:23.398+01:00  INFO 29133 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-17T11:42:23.398+01:00  INFO 29133 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2024-11-17T11:42:23.403+01:00  INFO 29133 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.LocationRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-11-17T11:42:23.404+01:00  INFO 29133 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.MenuItemRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-11-17T11:42:23.405+01:00  INFO 29133 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.RatingRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-11-17T11:42:23.406+01:00  INFO 29133 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.RestaurantRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-11-17T11:42:23.406+01:00  INFO 29133 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.UserFavoriteRestaurantRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-11-17T11:42:23.410+01:00  INFO 29133 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 11 ms. Found 0 Reactive Elasticsearch repository interfaces.
2024-11-17T11:42:23.415+01:00  INFO 29133 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-17T11:42:23.416+01:00  INFO 29133 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-17T11:42:23.429+01:00  INFO 29133 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.elasticsearch.ElasticRestaurantRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-11-17T11:42:23.439+01:00  INFO 29133 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 21 ms. Found 5 JPA repository interfaces.
2024-11-17T11:42:23.842+01:00  INFO 29133 --- [restaurant-service] [main] o.s.cloud.context.scope.GenericScope     : BeanFactory id=13877953-4ae2-31cd-942b-2d1b491df221
2024-11-17T11:42:24.456+01:00  WARN 29133 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-11-17T11:42:24.471+01:00  WARN 29133 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:42:24.479+01:00  WARN 29133 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:42:24.491+01:00  WARN 29133 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:42:24.497+01:00  WARN 29133 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:42:24.499+01:00  WARN 29133 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x00000001245617b8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:42:24.510+01:00  WARN 29133 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:42:24.536+01:00  WARN 29133 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:42:24.551+01:00  WARN 29133 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:42:24.556+01:00  WARN 29133 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:42:24.559+01:00  WARN 29133 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:42:24.561+01:00  WARN 29133 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:42:24.575+01:00  WARN 29133 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:42:24.587+01:00  WARN 29133 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:42:24.591+01:00  WARN 29133 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:42:24.594+01:00  WARN 29133 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:42:24.597+01:00  WARN 29133 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:42:24.599+01:00  WARN 29133 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:42:24.607+01:00  WARN 29133 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancedRetryFactory' of type [org.springframework.cloud.loadbalancer.blocking.retry.BlockingLoadBalancedRetryFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:42:24.613+01:00  WARN 29133 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:42:24.622+01:00  WARN 29133 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-11-17T11:42:24.624+01:00  WARN 29133 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:42:24.625+01:00  WARN 29133 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:42:24.908+01:00  INFO 29133 --- [restaurant-service] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-11-17T11:42:24.920+01:00  INFO 29133 --- [restaurant-service] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-11-17T11:42:24.920+01:00  INFO 29133 --- [restaurant-service] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.18]
2024-11-17T11:42:24.972+01:00  INFO 29133 --- [restaurant-service] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-11-17T11:42:24.972+01:00  INFO 29133 --- [restaurant-service] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3151 ms
2024-11-17T11:42:25.402+01:00  INFO 29133 --- [restaurant-service] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-17T11:42:25.431+01:00  INFO 29133 --- [restaurant-service] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.4.1.Final
2024-11-17T11:42:25.446+01:00  INFO 29133 --- [restaurant-service] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-11-17T11:42:25.567+01:00  INFO 29133 --- [restaurant-service] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-11-17T11:42:25.583+01:00  INFO 29133 --- [restaurant-service] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-11-17T11:42:25.714+01:00  INFO 29133 --- [restaurant-service] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3fb4beb1
2024-11-17T11:42:25.715+01:00  INFO 29133 --- [restaurant-service] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-11-17T11:42:25.739+01:00  WARN 29133 --- [restaurant-service] [main] org.hibernate.orm.deprecation            : HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-11-17T11:42:26.766+01:00  INFO 29133 --- [restaurant-service] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-11-17T11:42:26.885+01:00  INFO 29133 --- [restaurant-service] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-11-17T11:42:29.277+01:00  WARN 29133 --- [restaurant-service] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-11-17T11:42:29.326+01:00  WARN 29133 --- [restaurant-service] [main] .s.s.UserDetailsServiceAutoConfiguration : 

Using generated security password: 4d4b5908-edc5-423e-aa22-d07cb475d801

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2024-11-17T11:42:30.421+01:00  INFO 29133 --- [restaurant-service] [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 25 endpoint(s) beneath base path '/actuator'
2024-11-17T11:42:30.523+01:00  INFO 29133 --- [restaurant-service] [main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7d59e8d4, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@15a7fda8, org.springframework.security.web.context.SecurityContextHolderFilter@2f71cdc0, org.springframework.security.web.header.HeaderWriterFilter@22d61fa7, org.springframework.web.filter.CorsFilter@3e1d79ad, org.springframework.security.web.authentication.logout.LogoutFilter@11a0aee8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@67e9d8cb, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@38071cdb, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@36fe4eb0, org.springframework.security.web.access.ExceptionTranslationFilter@307a0097, org.springframework.security.web.access.intercept.AuthorizationFilter@745955ba]
2024-11-17T11:42:31.653+01:00  INFO 29133 --- [restaurant-service] [main] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2024-11-17T11:42:31.700+01:00  WARN 29133 --- [restaurant-service] [main] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-11-17T11:42:31.798+01:00  INFO 29133 --- [restaurant-service] [main] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2024-11-17T11:42:31.830+01:00  INFO 29133 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2024-11-17T11:42:31.834+01:00  INFO 29133 --- [restaurant-service] [main] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-11-17T11:42:31.850+01:00  INFO 29133 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-11-17T11:42:31.850+01:00  INFO 29133 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-11-17T11:42:31.850+01:00  INFO 29133 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-11-17T11:42:31.851+01:00  INFO 29133 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-11-17T11:42:31.851+01:00  INFO 29133 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-11-17T11:42:31.851+01:00  INFO 29133 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2024-11-17T11:42:31.851+01:00  INFO 29133 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-11-17T11:42:32.102+01:00  INFO 29133 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-11-17T11:42:32.104+01:00  INFO 29133 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2024-11-17T11:42:32.106+01:00  INFO 29133 --- [restaurant-service] [main] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-11-17T11:42:32.109+01:00  INFO 29133 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1731840152108 with initial instances count: 3
2024-11-17T11:42:32.121+01:00  INFO 29133 --- [restaurant-service] [main] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application RESTAURANT-SERVICE with eureka with status UP
2024-11-17T11:42:32.122+01:00  INFO 29133 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1731840152122, current=UP, previous=STARTING]
2024-11-17T11:42:32.123+01:00  INFO 29133 --- [restaurant-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_RESTAURANT-SERVICE/192.168.0.129:restaurant-service: registering service...
2024-11-17T11:42:32.137+01:00  INFO 29133 --- [restaurant-service] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path ''
2024-11-17T11:42:32.139+01:00  INFO 29133 --- [restaurant-service] [main] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 8080
2024-11-17T11:42:32.167+01:00  INFO 29133 --- [restaurant-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_RESTAURANT-SERVICE/192.168.0.129:restaurant-service - registration status: 204
2024-11-17T11:42:32.167+01:00  INFO 29133 --- [restaurant-service] [main] org.restaurant.RestaurantApplication     : Started RestaurantApplication in 10.983 seconds (process running for 12.246)
2024-11-17T11:42:32.169+01:00  INFO 29133 --- [restaurant-service] [scheduling-1] o.r.aspect.PerformanceTrackerHandler     : Execution started: tasks.scheduled.execution
2024-11-17T11:42:32.358+01:00  INFO 29133 --- [restaurant-service] [scheduling-1] o.r.aspect.PerformanceTrackerHandler     : execution stopped tasks.scheduled.executionduration 187
2024-11-17T11:43:29.394+01:00  INFO 29133 --- [restaurant-service] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-11-17T11:43:29.395+01:00  INFO 29133 --- [restaurant-service] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-11-17T11:43:29.401+01:00  INFO 29133 --- [restaurant-service] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 5 ms
2024-11-17T11:43:29.406+01:00  INFO 29133 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : Execution started: http.server.requests
2024-11-17T11:43:29.423+01:00  INFO 29133 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.filterchains
2024-11-17T11:43:29.431+01:00  INFO 29133 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.authorizations
2024-11-17T11:43:29.433+01:00  INFO 29133 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.authorizationsduration 2
2024-11-17T11:43:29.434+01:00  INFO 29133 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.filterchainsduration 11
2024-11-17T11:43:29.435+01:00  INFO 29133 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.http.secured.requests
2024-11-17T11:43:29.826+01:00  INFO 29133 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : Execution started: create.restaurant
2024-11-17T11:45:35.401+01:00  WARN 29133 --- [restaurant-service] [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=2m9s551ms).
2024-11-17T11:45:35.535+01:00  INFO 29133 --- [restaurant-service] [SpringApplicationShutdownHook] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application RESTAURANT-SERVICE with eureka with status DOWN
2024-11-17T11:45:35.536+01:00  INFO 29133 --- [restaurant-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1731840335536, current=DOWN, previous=UP]
2024-11-17T11:45:35.537+01:00  INFO 29133 --- [restaurant-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_RESTAURANT-SERVICE/192.168.0.129:restaurant-service: registering service...
2024-11-17T11:45:35.564+01:00  INFO 29133 --- [restaurant-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_RESTAURANT-SERVICE/192.168.0.129:restaurant-service - registration status: 204
2024-11-17T11:45:35.748+01:00  INFO 29133 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : Error occurred Map with prices can't be empty
2024-11-17T11:45:35.749+01:00  INFO 29133 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : execution stopped create.restaurantduration 125917
2024-11-17T11:45:35.762+01:00  INFO 29133 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : Error occurred Request processing failed: org.springframework.dao.InvalidDataAccessApiUsageException: Map with prices can't be empty
2024-11-17T11:45:35.762+01:00  INFO 29133 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.http.secured.requestsduration 126327
2024-11-17T11:45:35.762+01:00  INFO 29133 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.filterchains
2024-11-17T11:45:35.763+01:00  INFO 29133 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : Error occurred Request processing failed: org.springframework.dao.InvalidDataAccessApiUsageException: Map with prices can't be empty
2024-11-17T11:45:35.763+01:00  INFO 29133 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.filterchainsduration 1
2024-11-17T11:45:35.764+01:00  INFO 29133 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : Error occurred Map with prices can't be empty
2024-11-17T11:45:35.764+01:00  INFO 29133 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : execution stopped http.server.requestsduration 126358
2024-11-17T11:45:35.772+01:00  INFO 29133 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.filterchains
2024-11-17T11:45:35.774+01:00  INFO 29133 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.authorizations
2024-11-17T11:45:35.781+01:00  INFO 29133 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : Error occurred Access is denied
2024-11-17T11:45:35.781+01:00  INFO 29133 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.authorizationsduration 7
2024-11-17T11:45:35.804+01:00  INFO 29133 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.filterchainsduration 32
2024-11-17T11:45:35.805+01:00  INFO 29133 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.filterchains
2024-11-17T11:45:35.805+01:00  INFO 29133 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.filterchainsduration 0
2024-11-17T11:45:35.830+01:00  INFO 29133 --- [restaurant-service] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-11-17T11:45:35.833+01:00  INFO 29133 --- [restaurant-service] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-11-17T11:45:35.836+01:00  INFO 29133 --- [restaurant-service] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-11-17T11:45:35.837+01:00  INFO 29133 --- [restaurant-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2024-11-17T11:45:38.853+01:00  INFO 29133 --- [restaurant-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2024-11-17T11:45:38.867+01:00  INFO 29133 --- [restaurant-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_RESTAURANT-SERVICE/192.168.0.129:restaurant-service - deregister  status: 200
2024-11-17T11:45:38.881+01:00  INFO 29133 --- [restaurant-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2024-11-17T11:45:45.842+01:00  INFO 29228 --- [restaurant-service] [main] org.restaurant.RestaurantApplication     : Starting RestaurantApplication using Java 21.0.3 with PID 29228 (/Users/jakubsokol/feasto-app-main/feasto-backend/restaurant/target/classes started by jakubsokol in /Users/jakubsokol/feasto-app-main/feasto-backend)
2024-11-17T11:45:45.843+01:00  INFO 29228 --- [restaurant-service] [main] org.restaurant.RestaurantApplication     : No active profile set, falling back to 1 default profile: "default"
2024-11-17T11:45:47.215+01:00  INFO 29228 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-17T11:45:47.217+01:00  INFO 29228 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2024-11-17T11:45:47.256+01:00  INFO 29228 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.LocationRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-11-17T11:45:47.258+01:00  INFO 29228 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.MenuItemRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-11-17T11:45:47.258+01:00  INFO 29228 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.RatingRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-11-17T11:45:47.259+01:00  INFO 29228 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.RestaurantRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-11-17T11:45:47.259+01:00  INFO 29228 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.UserFavoriteRestaurantRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-11-17T11:45:47.330+01:00  INFO 29228 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 110 ms. Found 1 Elasticsearch repository interface.
2024-11-17T11:45:47.335+01:00  INFO 29228 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-17T11:45:47.336+01:00  INFO 29228 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2024-11-17T11:45:47.341+01:00  INFO 29228 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.LocationRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-11-17T11:45:47.342+01:00  INFO 29228 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.MenuItemRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-11-17T11:45:47.342+01:00  INFO 29228 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.RatingRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-11-17T11:45:47.342+01:00  INFO 29228 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.RestaurantRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-11-17T11:45:47.343+01:00  INFO 29228 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.UserFavoriteRestaurantRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-11-17T11:45:47.345+01:00  INFO 29228 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 9 ms. Found 0 Reactive Elasticsearch repository interfaces.
2024-11-17T11:45:47.351+01:00  INFO 29228 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-17T11:45:47.352+01:00  INFO 29228 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-17T11:45:47.365+01:00  INFO 29228 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.elasticsearch.ElasticRestaurantRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-11-17T11:45:47.375+01:00  INFO 29228 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 21 ms. Found 5 JPA repository interfaces.
2024-11-17T11:45:47.840+01:00  INFO 29228 --- [restaurant-service] [main] o.s.cloud.context.scope.GenericScope     : BeanFactory id=13877953-4ae2-31cd-942b-2d1b491df221
2024-11-17T11:45:48.487+01:00  WARN 29228 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-11-17T11:45:48.498+01:00  WARN 29228 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:45:48.507+01:00  WARN 29228 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:45:48.515+01:00  WARN 29228 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:45:48.520+01:00  WARN 29228 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:45:48.522+01:00  WARN 29228 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x000000012257b858] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:45:48.529+01:00  WARN 29228 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:45:48.546+01:00  WARN 29228 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:45:48.558+01:00  WARN 29228 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:45:48.563+01:00  WARN 29228 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:45:48.565+01:00  WARN 29228 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:45:48.567+01:00  WARN 29228 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:45:48.578+01:00  WARN 29228 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:45:48.589+01:00  WARN 29228 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:45:48.593+01:00  WARN 29228 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:45:48.595+01:00  WARN 29228 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:45:48.597+01:00  WARN 29228 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:45:48.599+01:00  WARN 29228 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:45:48.606+01:00  WARN 29228 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancedRetryFactory' of type [org.springframework.cloud.loadbalancer.blocking.retry.BlockingLoadBalancedRetryFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:45:48.612+01:00  WARN 29228 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:45:48.619+01:00  WARN 29228 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-11-17T11:45:48.621+01:00  WARN 29228 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:45:48.622+01:00  WARN 29228 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:45:48.904+01:00  INFO 29228 --- [restaurant-service] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-11-17T11:45:48.913+01:00  INFO 29228 --- [restaurant-service] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-11-17T11:45:48.913+01:00  INFO 29228 --- [restaurant-service] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.18]
2024-11-17T11:45:48.957+01:00  INFO 29228 --- [restaurant-service] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-11-17T11:45:48.958+01:00  INFO 29228 --- [restaurant-service] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3059 ms
2024-11-17T11:45:49.363+01:00  INFO 29228 --- [restaurant-service] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-17T11:45:49.396+01:00  INFO 29228 --- [restaurant-service] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.4.1.Final
2024-11-17T11:45:49.411+01:00  INFO 29228 --- [restaurant-service] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-11-17T11:45:49.518+01:00  INFO 29228 --- [restaurant-service] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-11-17T11:45:49.532+01:00  INFO 29228 --- [restaurant-service] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-11-17T11:45:49.652+01:00  INFO 29228 --- [restaurant-service] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6d94a966
2024-11-17T11:45:49.653+01:00  INFO 29228 --- [restaurant-service] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-11-17T11:45:49.674+01:00  WARN 29228 --- [restaurant-service] [main] org.hibernate.orm.deprecation            : HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-11-17T11:45:50.699+01:00  INFO 29228 --- [restaurant-service] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-11-17T11:45:50.840+01:00  INFO 29228 --- [restaurant-service] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-11-17T11:45:52.876+01:00  WARN 29228 --- [restaurant-service] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-11-17T11:45:52.953+01:00  WARN 29228 --- [restaurant-service] [main] .s.s.UserDetailsServiceAutoConfiguration : 

Using generated security password: ed26d552-8304-41e4-abe7-b9295ede6975

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2024-11-17T11:45:53.687+01:00  INFO 29228 --- [restaurant-service] [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 25 endpoint(s) beneath base path '/actuator'
2024-11-17T11:45:54.029+01:00  INFO 29228 --- [restaurant-service] [main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@2211432e, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4f1dd46b, org.springframework.security.web.context.SecurityContextHolderFilter@4a742630, org.springframework.security.web.header.HeaderWriterFilter@3feafba2, org.springframework.web.filter.CorsFilter@d3bf018, org.springframework.security.web.authentication.logout.LogoutFilter@58d1340e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1bc90b56, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@596559cf, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@be60fad, org.springframework.security.web.access.ExceptionTranslationFilter@3906de9, org.springframework.security.web.access.intercept.AuthorizationFilter@184cd907]
2024-11-17T11:45:55.304+01:00  INFO 29228 --- [restaurant-service] [main] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2024-11-17T11:45:55.360+01:00  WARN 29228 --- [restaurant-service] [main] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-11-17T11:45:55.469+01:00  INFO 29228 --- [restaurant-service] [main] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2024-11-17T11:45:55.504+01:00  INFO 29228 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2024-11-17T11:45:55.508+01:00  INFO 29228 --- [restaurant-service] [main] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-11-17T11:45:55.526+01:00  INFO 29228 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-11-17T11:45:55.527+01:00  INFO 29228 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-11-17T11:45:55.527+01:00  INFO 29228 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-11-17T11:45:55.527+01:00  INFO 29228 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-11-17T11:45:55.527+01:00  INFO 29228 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-11-17T11:45:55.527+01:00  INFO 29228 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2024-11-17T11:45:55.527+01:00  INFO 29228 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-11-17T11:45:55.751+01:00  INFO 29228 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-11-17T11:45:55.754+01:00  INFO 29228 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2024-11-17T11:45:55.756+01:00  INFO 29228 --- [restaurant-service] [main] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-11-17T11:45:55.761+01:00  INFO 29228 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1731840355760 with initial instances count: 2
2024-11-17T11:45:55.774+01:00  INFO 29228 --- [restaurant-service] [main] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application RESTAURANT-SERVICE with eureka with status UP
2024-11-17T11:45:55.775+01:00  INFO 29228 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1731840355775, current=UP, previous=STARTING]
2024-11-17T11:45:55.776+01:00  INFO 29228 --- [restaurant-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_RESTAURANT-SERVICE/192.168.0.129:restaurant-service: registering service...
2024-11-17T11:45:55.791+01:00  INFO 29228 --- [restaurant-service] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path ''
2024-11-17T11:45:55.793+01:00  INFO 29228 --- [restaurant-service] [main] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 8080
2024-11-17T11:45:55.820+01:00  INFO 29228 --- [restaurant-service] [main] org.restaurant.RestaurantApplication     : Started RestaurantApplication in 10.567 seconds (process running for 11.556)
2024-11-17T11:45:55.823+01:00  INFO 29228 --- [restaurant-service] [scheduling-1] o.r.aspect.PerformanceTrackerHandler     : Execution started: tasks.scheduled.execution
2024-11-17T11:45:55.824+01:00  INFO 29228 --- [restaurant-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_RESTAURANT-SERVICE/192.168.0.129:restaurant-service - registration status: 204
2024-11-17T11:45:56.029+01:00  INFO 29228 --- [restaurant-service] [scheduling-1] o.r.aspect.PerformanceTrackerHandler     : execution stopped tasks.scheduled.executionduration 204
2024-11-17T11:45:56.220+01:00  INFO 29228 --- [restaurant-service] [RMI TCP Connection(2)-127.0.0.1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-11-17T11:45:56.220+01:00  INFO 29228 --- [restaurant-service] [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-11-17T11:45:56.222+01:00  INFO 29228 --- [restaurant-service] [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2024-11-17T11:46:50.021+01:00  INFO 29228 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : Execution started: http.server.requests
2024-11-17T11:46:50.050+01:00  INFO 29228 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.filterchains
2024-11-17T11:46:50.061+01:00  INFO 29228 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.authorizations
2024-11-17T11:46:50.064+01:00  INFO 29228 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.authorizationsduration 2
2024-11-17T11:46:50.066+01:00  INFO 29228 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.filterchainsduration 15
2024-11-17T11:46:50.066+01:00  INFO 29228 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.http.secured.requests
2024-11-17T11:46:50.132+01:00  INFO 29228 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : Execution started: create.restaurant
2024-11-17T11:47:11.570+01:00  INFO 29228 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : execution stopped create.restaurantduration 21438
2024-11-17T11:47:11.599+01:00  INFO 29228 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.http.secured.requestsduration 21533
2024-11-17T11:47:11.600+01:00  INFO 29228 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.filterchains
2024-11-17T11:47:11.601+01:00  INFO 29228 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.filterchainsduration 1
2024-11-17T11:47:11.601+01:00  INFO 29228 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : execution stopped http.server.requestsduration 21580
2024-11-17T11:47:27.940+01:00  INFO 29228 --- [restaurant-service] [http-nio-8080-exec-2] o.r.aspect.PerformanceTrackerHandler     : Execution started: http.server.requests
2024-11-17T11:47:27.943+01:00  INFO 29228 --- [restaurant-service] [http-nio-8080-exec-2] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.filterchains
2024-11-17T11:47:27.944+01:00  INFO 29228 --- [restaurant-service] [http-nio-8080-exec-2] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.authorizations
2024-11-17T11:47:27.944+01:00  INFO 29228 --- [restaurant-service] [http-nio-8080-exec-2] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.authorizationsduration 0
2024-11-17T11:47:27.945+01:00  INFO 29228 --- [restaurant-service] [http-nio-8080-exec-2] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.filterchainsduration 2
2024-11-17T11:47:27.945+01:00  INFO 29228 --- [restaurant-service] [http-nio-8080-exec-2] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.http.secured.requests
2024-11-17T11:47:27.951+01:00  INFO 29228 --- [restaurant-service] [http-nio-8080-exec-2] o.r.aspect.PerformanceTrackerHandler     : Execution started: create.restaurant
2024-11-17T11:47:28.045+01:00  INFO 29228 --- [restaurant-service] [http-nio-8080-exec-2] o.r.aspect.PerformanceTrackerHandler     : execution stopped create.restaurantduration 93
2024-11-17T11:47:28.054+01:00  INFO 29228 --- [restaurant-service] [http-nio-8080-exec-2] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.http.secured.requestsduration 109
2024-11-17T11:47:28.054+01:00  INFO 29228 --- [restaurant-service] [http-nio-8080-exec-2] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.filterchains
2024-11-17T11:47:28.055+01:00  INFO 29228 --- [restaurant-service] [http-nio-8080-exec-2] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.filterchainsduration 1
2024-11-17T11:47:28.055+01:00  INFO 29228 --- [restaurant-service] [http-nio-8080-exec-2] o.r.aspect.PerformanceTrackerHandler     : execution stopped http.server.requestsduration 114
2024-11-17T11:47:56.308+01:00  INFO 29228 --- [restaurant-service] [SpringApplicationShutdownHook] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application RESTAURANT-SERVICE with eureka with status DOWN
2024-11-17T11:47:56.310+01:00  INFO 29228 --- [restaurant-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1731840476310, current=DOWN, previous=UP]
2024-11-17T11:47:56.311+01:00  INFO 29228 --- [restaurant-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_RESTAURANT-SERVICE/192.168.0.129:restaurant-service: registering service...
2024-11-17T11:47:56.397+01:00  INFO 29228 --- [restaurant-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_RESTAURANT-SERVICE/192.168.0.129:restaurant-service - registration status: 204
2024-11-17T11:47:56.464+01:00  INFO 29228 --- [restaurant-service] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-11-17T11:47:56.468+01:00  INFO 29228 --- [restaurant-service] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-11-17T11:47:56.472+01:00  INFO 29228 --- [restaurant-service] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-11-17T11:47:56.474+01:00  INFO 29228 --- [restaurant-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2024-11-17T11:47:59.484+01:00  INFO 29228 --- [restaurant-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2024-11-17T11:47:59.497+01:00  INFO 29228 --- [restaurant-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_RESTAURANT-SERVICE/192.168.0.129:restaurant-service - deregister  status: 200
2024-11-17T11:47:59.510+01:00  INFO 29228 --- [restaurant-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2024-11-17T11:48:04.506+01:00  INFO 29301 --- [restaurant-service] [main] org.restaurant.RestaurantApplication     : Starting RestaurantApplication using Java 21.0.3 with PID 29301 (/Users/jakubsokol/feasto-app-main/feasto-backend/restaurant/target/classes started by jakubsokol in /Users/jakubsokol/feasto-app-main/feasto-backend)
2024-11-17T11:48:04.509+01:00  INFO 29301 --- [restaurant-service] [main] org.restaurant.RestaurantApplication     : No active profile set, falling back to 1 default profile: "default"
2024-11-17T11:48:06.013+01:00  INFO 29301 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-17T11:48:06.015+01:00  INFO 29301 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2024-11-17T11:48:06.054+01:00  INFO 29301 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.LocationRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-11-17T11:48:06.055+01:00  INFO 29301 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.MenuItemRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-11-17T11:48:06.056+01:00  INFO 29301 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.RatingRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-11-17T11:48:06.056+01:00  INFO 29301 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.RestaurantRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-11-17T11:48:06.057+01:00  INFO 29301 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.UserFavoriteRestaurantRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-11-17T11:48:06.134+01:00  INFO 29301 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 116 ms. Found 1 Elasticsearch repository interface.
2024-11-17T11:48:06.142+01:00  INFO 29301 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-17T11:48:06.143+01:00  INFO 29301 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2024-11-17T11:48:06.148+01:00  INFO 29301 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.LocationRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-11-17T11:48:06.149+01:00  INFO 29301 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.MenuItemRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-11-17T11:48:06.149+01:00  INFO 29301 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.RatingRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-11-17T11:48:06.149+01:00  INFO 29301 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.RestaurantRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-11-17T11:48:06.150+01:00  INFO 29301 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.UserFavoriteRestaurantRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-11-17T11:48:06.152+01:00  INFO 29301 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 9 ms. Found 0 Reactive Elasticsearch repository interfaces.
2024-11-17T11:48:06.158+01:00  INFO 29301 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-17T11:48:06.159+01:00  INFO 29301 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-17T11:48:06.170+01:00  INFO 29301 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.elasticsearch.ElasticRestaurantRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-11-17T11:48:06.180+01:00  INFO 29301 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 19 ms. Found 5 JPA repository interfaces.
2024-11-17T11:48:06.545+01:00  INFO 29301 --- [restaurant-service] [main] o.s.cloud.context.scope.GenericScope     : BeanFactory id=13877953-4ae2-31cd-942b-2d1b491df221
2024-11-17T11:48:07.154+01:00  WARN 29301 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-11-17T11:48:07.168+01:00  WARN 29301 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:48:07.177+01:00  WARN 29301 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:48:07.189+01:00  WARN 29301 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:48:07.194+01:00  WARN 29301 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:48:07.197+01:00  WARN 29301 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x0000000120565af8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:48:07.206+01:00  WARN 29301 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:48:07.231+01:00  WARN 29301 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:48:07.243+01:00  WARN 29301 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:48:07.248+01:00  WARN 29301 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:48:07.251+01:00  WARN 29301 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:48:07.253+01:00  WARN 29301 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:48:07.264+01:00  WARN 29301 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:48:07.275+01:00  WARN 29301 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:48:07.279+01:00  WARN 29301 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:48:07.281+01:00  WARN 29301 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:48:07.283+01:00  WARN 29301 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:48:07.285+01:00  WARN 29301 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:48:07.294+01:00  WARN 29301 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancedRetryFactory' of type [org.springframework.cloud.loadbalancer.blocking.retry.BlockingLoadBalancedRetryFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:48:07.299+01:00  WARN 29301 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:48:07.306+01:00  WARN 29301 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-11-17T11:48:07.308+01:00  WARN 29301 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:48:07.309+01:00  WARN 29301 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T11:48:07.568+01:00  INFO 29301 --- [restaurant-service] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-11-17T11:48:07.576+01:00  INFO 29301 --- [restaurant-service] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-11-17T11:48:07.577+01:00  INFO 29301 --- [restaurant-service] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.18]
2024-11-17T11:48:07.619+01:00  INFO 29301 --- [restaurant-service] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-11-17T11:48:07.620+01:00  INFO 29301 --- [restaurant-service] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3050 ms
2024-11-17T11:48:08.028+01:00  INFO 29301 --- [restaurant-service] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-17T11:48:08.053+01:00  INFO 29301 --- [restaurant-service] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.4.1.Final
2024-11-17T11:48:08.066+01:00  INFO 29301 --- [restaurant-service] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-11-17T11:48:08.172+01:00  INFO 29301 --- [restaurant-service] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-11-17T11:48:08.185+01:00  INFO 29301 --- [restaurant-service] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-11-17T11:48:08.325+01:00  INFO 29301 --- [restaurant-service] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3e755d5f
2024-11-17T11:48:08.326+01:00  INFO 29301 --- [restaurant-service] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-11-17T11:48:08.355+01:00  WARN 29301 --- [restaurant-service] [main] org.hibernate.orm.deprecation            : HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-11-17T11:48:09.384+01:00  INFO 29301 --- [restaurant-service] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-11-17T11:48:09.527+01:00  INFO 29301 --- [restaurant-service] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-11-17T11:48:11.896+01:00  WARN 29301 --- [restaurant-service] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-11-17T11:48:11.947+01:00  WARN 29301 --- [restaurant-service] [main] .s.s.UserDetailsServiceAutoConfiguration : 

Using generated security password: c983ab5d-ae8d-434d-8efc-777a0d5c3237

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2024-11-17T11:48:13.149+01:00  INFO 29301 --- [restaurant-service] [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 25 endpoint(s) beneath base path '/actuator'
2024-11-17T11:48:13.240+01:00  INFO 29301 --- [restaurant-service] [main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@17ae4b7c, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7ede896d, org.springframework.security.web.context.SecurityContextHolderFilter@15f28ef5, org.springframework.security.web.header.HeaderWriterFilter@882364e, org.springframework.web.filter.CorsFilter@199efc58, org.springframework.security.web.authentication.logout.LogoutFilter@401516ad, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3335713, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3e6b4f51, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3b310465, org.springframework.security.web.access.ExceptionTranslationFilter@1ba7b274, org.springframework.security.web.access.intercept.AuthorizationFilter@56567e9b]
2024-11-17T11:48:14.501+01:00  INFO 29301 --- [restaurant-service] [main] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2024-11-17T11:48:14.652+01:00  WARN 29301 --- [restaurant-service] [main] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-11-17T11:48:14.931+01:00  INFO 29301 --- [restaurant-service] [main] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2024-11-17T11:48:15.004+01:00  INFO 29301 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2024-11-17T11:48:15.011+01:00  INFO 29301 --- [restaurant-service] [main] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-11-17T11:48:15.037+01:00  INFO 29301 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-11-17T11:48:15.038+01:00  INFO 29301 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-11-17T11:48:15.038+01:00  INFO 29301 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-11-17T11:48:15.038+01:00  INFO 29301 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-11-17T11:48:15.038+01:00  INFO 29301 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-11-17T11:48:15.038+01:00  INFO 29301 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2024-11-17T11:48:15.038+01:00  INFO 29301 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-11-17T11:48:15.391+01:00  INFO 29301 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-11-17T11:48:15.396+01:00  INFO 29301 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2024-11-17T11:48:15.399+01:00  INFO 29301 --- [restaurant-service] [main] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-11-17T11:48:15.403+01:00  INFO 29301 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1731840495402 with initial instances count: 1
2024-11-17T11:48:15.418+01:00  INFO 29301 --- [restaurant-service] [main] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application RESTAURANT-SERVICE with eureka with status UP
2024-11-17T11:48:15.419+01:00  INFO 29301 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1731840495418, current=UP, previous=STARTING]
2024-11-17T11:48:15.420+01:00  INFO 29301 --- [restaurant-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_RESTAURANT-SERVICE/192.168.0.129:restaurant-service: registering service...
2024-11-17T11:48:15.440+01:00  INFO 29301 --- [restaurant-service] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path ''
2024-11-17T11:48:15.443+01:00  INFO 29301 --- [restaurant-service] [main] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 8080
2024-11-17T11:48:15.473+01:00  INFO 29301 --- [restaurant-service] [main] org.restaurant.RestaurantApplication     : Started RestaurantApplication in 11.508 seconds (process running for 12.234)
2024-11-17T11:48:15.477+01:00  INFO 29301 --- [restaurant-service] [scheduling-1] o.r.aspect.PerformanceTrackerHandler     : Execution started: tasks.scheduled.execution
2024-11-17T11:48:15.494+01:00  INFO 29301 --- [restaurant-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_RESTAURANT-SERVICE/192.168.0.129:restaurant-service - registration status: 204
2024-11-17T11:48:15.799+01:00  INFO 29301 --- [restaurant-service] [RMI TCP Connection(3)-127.0.0.1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-11-17T11:48:15.799+01:00  INFO 29301 --- [restaurant-service] [RMI TCP Connection(3)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-11-17T11:48:15.801+01:00  INFO 29301 --- [restaurant-service] [RMI TCP Connection(3)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-11-17T11:48:16.079+01:00  INFO 29301 --- [restaurant-service] [scheduling-1] o.r.aspect.PerformanceTrackerHandler     : execution stopped tasks.scheduled.executionduration 596
2024-11-17T11:49:35.640+01:00  INFO 29301 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : Execution started: http.server.requests
2024-11-17T11:49:35.675+01:00  INFO 29301 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.filterchains
2024-11-17T11:49:35.683+01:00  INFO 29301 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.authorizations
2024-11-17T11:49:35.686+01:00  INFO 29301 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.authorizationsduration 2
2024-11-17T11:49:35.687+01:00  INFO 29301 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.filterchainsduration 11
2024-11-17T11:49:35.687+01:00  INFO 29301 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.http.secured.requests
2024-11-17T11:49:35.828+01:00  INFO 29301 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : Execution started: create.restaurant
2024-11-17T11:49:36.196+01:00  INFO 29301 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : execution stopped create.restaurantduration 368
2024-11-17T11:49:36.233+01:00  INFO 29301 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.http.secured.requestsduration 546
2024-11-17T11:49:36.234+01:00  INFO 29301 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.filterchains
2024-11-17T11:49:36.235+01:00  INFO 29301 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.filterchainsduration 0
2024-11-17T11:49:36.235+01:00  INFO 29301 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : execution stopped http.server.requestsduration 588
2024-11-17T11:53:15.113+01:00  INFO 29301 --- [restaurant-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-11-17T11:58:15.132+01:00  INFO 29301 --- [restaurant-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-11-17T12:03:15.144+01:00  INFO 29301 --- [restaurant-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-11-17T12:08:15.158+01:00  INFO 29301 --- [restaurant-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-11-17T12:13:15.159+01:00  INFO 29301 --- [restaurant-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-11-17T12:25:46.377+01:00  WARN 29301 --- [restaurant-service] [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=11m6s585ms).
2024-11-17T12:31:28.466+01:00  WARN 29301 --- [restaurant-service] [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=5m42s93ms).
2024-11-17T12:34:04.889+01:00  INFO 29301 --- [restaurant-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-11-17T12:39:04.915+01:00  INFO 29301 --- [restaurant-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-11-17T12:44:04.928+01:00  INFO 29301 --- [restaurant-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-11-17T12:49:04.941+01:00  INFO 29301 --- [restaurant-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-11-17T12:54:04.954+01:00  INFO 29301 --- [restaurant-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-11-17T12:59:04.976+01:00  INFO 29301 --- [restaurant-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-11-17T13:04:04.991+01:00  INFO 29301 --- [restaurant-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-11-17T13:04:05.239+01:00  INFO 29301 --- [restaurant-service] [scheduling-1] o.r.aspect.PerformanceTrackerHandler     : Execution started: tasks.scheduled.execution
2024-11-17T13:04:05.322+01:00  INFO 29301 --- [restaurant-service] [scheduling-1] o.r.aspect.PerformanceTrackerHandler     : execution stopped tasks.scheduled.executionduration 82
2024-11-17T13:09:05.007+01:00  INFO 29301 --- [restaurant-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-11-17T13:14:05.019+01:00  INFO 29301 --- [restaurant-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-11-17T13:19:05.043+01:00  INFO 29301 --- [restaurant-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-11-17T13:24:05.060+01:00  INFO 29301 --- [restaurant-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-11-17T13:29:05.074+01:00  INFO 29301 --- [restaurant-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-11-17T13:34:05.089+01:00  INFO 29301 --- [restaurant-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-11-17T13:39:05.107+01:00  INFO 29301 --- [restaurant-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-11-17T13:44:05.125+01:00  INFO 29301 --- [restaurant-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-11-17T13:49:05.147+01:00  INFO 29301 --- [restaurant-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-11-17T13:54:05.161+01:00  INFO 29301 --- [restaurant-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-11-17T13:58:27.850+01:00  WARN 29301 --- [restaurant-service] [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=58s561ms).
2024-11-17T14:00:16.911+01:00  WARN 29301 --- [restaurant-service] [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m19s56ms).
2024-11-17T14:00:22.761+01:00  INFO 29301 --- [restaurant-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-11-17T14:04:01.861+01:00  WARN 29301 --- [restaurant-service] [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=2m44s841ms).
2024-11-17T14:07:15.998+01:00  WARN 29301 --- [restaurant-service] [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=2m8s755ms).
2024-11-17T14:14:15.591+01:00  WARN 29301 --- [restaurant-service] [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=6m29s585ms).
2024-11-17T14:15:21.409+01:00  INFO 29301 --- [restaurant-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-11-17T14:15:21.517+01:00  INFO 29301 --- [restaurant-service] [scheduling-1] o.r.aspect.PerformanceTrackerHandler     : Execution started: tasks.scheduled.execution
2024-11-17T14:15:21.633+01:00  INFO 29301 --- [restaurant-service] [scheduling-1] o.r.aspect.PerformanceTrackerHandler     : execution stopped tasks.scheduled.executionduration 114
2024-11-17T14:16:44.393+01:00  WARN 29301 --- [restaurant-service] [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=58s773ms).
2024-11-17T14:32:57.196+01:00  WARN 29301 --- [restaurant-service] [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m42s791ms).
2024-11-17T14:36:02.973+01:00  INFO 29301 --- [restaurant-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-11-17T14:41:02.999+01:00  INFO 29301 --- [restaurant-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-11-17T14:46:03.049+01:00  INFO 29301 --- [restaurant-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-11-17T14:51:03.059+01:00  INFO 29301 --- [restaurant-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-11-17T14:54:25.826+01:00  WARN 29301 --- [restaurant-service] [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=58s440ms).
2024-11-17T14:55:24.930+01:00  WARN 29301 --- [restaurant-service] [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=59s110ms).
2024-11-17T14:59:34.584+01:00  WARN 29301 --- [restaurant-service] [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=3m39s645ms).
2024-11-17T15:09:02.644+01:00  WARN 29301 --- [restaurant-service] [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=9m27s945ms).
2024-11-17T15:09:08.030+01:00  INFO 29301 --- [restaurant-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-11-17T15:14:08.038+01:00  INFO 29301 --- [restaurant-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-11-17T15:19:08.050+01:00  INFO 29301 --- [restaurant-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-11-17T15:24:08.066+01:00  INFO 29301 --- [restaurant-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-11-17T15:26:02.914+01:00  INFO 29301 --- [restaurant-service] [http-nio-8080-exec-3] o.r.aspect.PerformanceTrackerHandler     : Execution started: http.server.requests
2024-11-17T15:26:02.924+01:00  INFO 29301 --- [restaurant-service] [http-nio-8080-exec-3] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.filterchains
2024-11-17T15:26:02.926+01:00  INFO 29301 --- [restaurant-service] [http-nio-8080-exec-3] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.authorizations
2024-11-17T15:26:02.928+01:00  INFO 29301 --- [restaurant-service] [http-nio-8080-exec-3] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.authorizationsduration 1
2024-11-17T15:26:02.928+01:00  INFO 29301 --- [restaurant-service] [http-nio-8080-exec-3] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.filterchainsduration 4
2024-11-17T15:26:02.928+01:00  INFO 29301 --- [restaurant-service] [http-nio-8080-exec-3] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.http.secured.requests
2024-11-17T15:26:02.961+01:00  INFO 29301 --- [restaurant-service] [http-nio-8080-exec-3] o.r.aspect.PerformanceTrackerHandler     : Execution started: create.restaurant
2024-11-17T15:26:03.374+01:00  INFO 29301 --- [restaurant-service] [http-nio-8080-exec-3] o.r.aspect.PerformanceTrackerHandler     : execution stopped create.restaurantduration 412
2024-11-17T15:26:03.400+01:00  INFO 29301 --- [restaurant-service] [http-nio-8080-exec-3] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.http.secured.requestsduration 472
2024-11-17T15:26:03.400+01:00  INFO 29301 --- [restaurant-service] [http-nio-8080-exec-3] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.filterchains
2024-11-17T15:26:03.401+01:00  INFO 29301 --- [restaurant-service] [http-nio-8080-exec-3] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.filterchainsduration 1
2024-11-17T15:26:03.401+01:00  INFO 29301 --- [restaurant-service] [http-nio-8080-exec-3] o.r.aspect.PerformanceTrackerHandler     : execution stopped http.server.requestsduration 486
2024-11-17T15:29:08.076+01:00  INFO 29301 --- [restaurant-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-11-17T15:34:08.090+01:00  INFO 29301 --- [restaurant-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-11-17T15:37:34.528+01:00  INFO 29301 --- [restaurant-service] [SpringApplicationShutdownHook] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application RESTAURANT-SERVICE with eureka with status DOWN
2024-11-17T15:37:34.529+01:00  INFO 29301 --- [restaurant-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1731854254529, current=DOWN, previous=UP]
2024-11-17T15:37:34.530+01:00  INFO 29301 --- [restaurant-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_RESTAURANT-SERVICE/192.168.0.129:restaurant-service: registering service...
2024-11-17T15:37:34.581+01:00  INFO 29301 --- [restaurant-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_RESTAURANT-SERVICE/192.168.0.129:restaurant-service - registration status: 204
2024-11-17T15:37:34.633+01:00  INFO 29301 --- [restaurant-service] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-11-17T15:37:34.637+01:00  INFO 29301 --- [restaurant-service] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-11-17T15:37:34.653+01:00  INFO 29301 --- [restaurant-service] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-11-17T15:37:34.669+01:00  INFO 29301 --- [restaurant-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2024-11-17T15:37:37.686+01:00  INFO 29301 --- [restaurant-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2024-11-17T15:37:37.706+01:00  INFO 29301 --- [restaurant-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_RESTAURANT-SERVICE/192.168.0.129:restaurant-service - deregister  status: 200
2024-11-17T15:37:37.719+01:00  INFO 29301 --- [restaurant-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2024-11-17T15:37:44.230+01:00  INFO 35223 --- [restaurant-service] [main] org.restaurant.RestaurantApplication     : Starting RestaurantApplication using Java 21.0.3 with PID 35223 (/Users/jakubsokol/feasto-app-main/feasto-backend/restaurant/target/classes started by jakubsokol in /Users/jakubsokol/feasto-app-main/feasto-backend)
2024-11-17T15:37:44.232+01:00  INFO 35223 --- [restaurant-service] [main] org.restaurant.RestaurantApplication     : No active profile set, falling back to 1 default profile: "default"
2024-11-17T15:37:45.599+01:00  INFO 35223 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-17T15:37:45.601+01:00  INFO 35223 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2024-11-17T15:37:45.638+01:00  INFO 35223 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.LocationRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-11-17T15:37:45.639+01:00  INFO 35223 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.MenuItemRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-11-17T15:37:45.640+01:00  INFO 35223 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.RatingRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-11-17T15:37:45.641+01:00  INFO 35223 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.RestaurantRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-11-17T15:37:45.641+01:00  INFO 35223 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.UserFavoriteRestaurantRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-11-17T15:37:45.709+01:00  INFO 35223 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 106 ms. Found 1 Elasticsearch repository interface.
2024-11-17T15:37:45.715+01:00  INFO 35223 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-17T15:37:45.715+01:00  INFO 35223 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2024-11-17T15:37:45.720+01:00  INFO 35223 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.LocationRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-11-17T15:37:45.721+01:00  INFO 35223 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.MenuItemRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-11-17T15:37:45.721+01:00  INFO 35223 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.RatingRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-11-17T15:37:45.722+01:00  INFO 35223 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.RestaurantRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-11-17T15:37:45.722+01:00  INFO 35223 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.UserFavoriteRestaurantRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-11-17T15:37:45.726+01:00  INFO 35223 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 10 ms. Found 0 Reactive Elasticsearch repository interfaces.
2024-11-17T15:37:45.731+01:00  INFO 35223 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-17T15:37:45.732+01:00  INFO 35223 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-17T15:37:45.744+01:00  INFO 35223 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.elasticsearch.ElasticRestaurantRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-11-17T15:37:45.756+01:00  INFO 35223 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 23 ms. Found 5 JPA repository interfaces.
2024-11-17T15:37:46.152+01:00  INFO 35223 --- [restaurant-service] [main] o.s.cloud.context.scope.GenericScope     : BeanFactory id=13877953-4ae2-31cd-942b-2d1b491df221
2024-11-17T15:37:46.754+01:00  WARN 35223 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-11-17T15:37:46.768+01:00  WARN 35223 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T15:37:46.776+01:00  WARN 35223 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T15:37:46.788+01:00  WARN 35223 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T15:37:46.793+01:00  WARN 35223 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T15:37:46.795+01:00  WARN 35223 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x00000001225627e8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T15:37:46.806+01:00  WARN 35223 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T15:37:46.831+01:00  WARN 35223 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T15:37:46.842+01:00  WARN 35223 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T15:37:46.847+01:00  WARN 35223 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T15:37:46.851+01:00  WARN 35223 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T15:37:46.852+01:00  WARN 35223 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T15:37:46.864+01:00  WARN 35223 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T15:37:46.875+01:00  WARN 35223 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T15:37:46.879+01:00  WARN 35223 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T15:37:46.882+01:00  WARN 35223 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T15:37:46.884+01:00  WARN 35223 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T15:37:46.887+01:00  WARN 35223 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T15:37:46.893+01:00  WARN 35223 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancedRetryFactory' of type [org.springframework.cloud.loadbalancer.blocking.retry.BlockingLoadBalancedRetryFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T15:37:46.899+01:00  WARN 35223 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T15:37:46.907+01:00  WARN 35223 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-11-17T15:37:46.908+01:00  WARN 35223 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T15:37:46.910+01:00  WARN 35223 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T15:37:47.182+01:00  INFO 35223 --- [restaurant-service] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-11-17T15:37:47.191+01:00  INFO 35223 --- [restaurant-service] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-11-17T15:37:47.191+01:00  INFO 35223 --- [restaurant-service] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.18]
2024-11-17T15:37:47.237+01:00  INFO 35223 --- [restaurant-service] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-11-17T15:37:47.237+01:00  INFO 35223 --- [restaurant-service] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2954 ms
2024-11-17T15:37:47.697+01:00  INFO 35223 --- [restaurant-service] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-17T15:37:47.731+01:00  INFO 35223 --- [restaurant-service] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.4.1.Final
2024-11-17T15:37:47.748+01:00  INFO 35223 --- [restaurant-service] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-11-17T15:37:47.867+01:00  INFO 35223 --- [restaurant-service] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-11-17T15:37:47.883+01:00  INFO 35223 --- [restaurant-service] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-11-17T15:37:48.029+01:00  INFO 35223 --- [restaurant-service] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2b5a04b0
2024-11-17T15:37:48.030+01:00  INFO 35223 --- [restaurant-service] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-11-17T15:37:48.050+01:00  WARN 35223 --- [restaurant-service] [main] org.hibernate.orm.deprecation            : HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-11-17T15:37:49.041+01:00  INFO 35223 --- [restaurant-service] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-11-17T15:37:49.162+01:00  INFO 35223 --- [restaurant-service] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-11-17T15:37:50.869+01:00  WARN 35223 --- [restaurant-service] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-11-17T15:37:51.205+01:00  WARN 35223 --- [restaurant-service] [main] .s.s.UserDetailsServiceAutoConfiguration : 

Using generated security password: d3bfc732-0a6d-4323-9662-bc3de4bf7b07

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2024-11-17T15:37:52.009+01:00  INFO 35223 --- [restaurant-service] [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 25 endpoint(s) beneath base path '/actuator'
2024-11-17T15:37:52.084+01:00  INFO 35223 --- [restaurant-service] [main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@505f8cf, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6da50fd, org.springframework.security.web.context.SecurityContextHolderFilter@26501a93, org.springframework.security.web.header.HeaderWriterFilter@303fe95c, org.springframework.web.filter.CorsFilter@69e91f2b, org.springframework.security.web.authentication.logout.LogoutFilter@1b4f245, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@26309e6f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@159e8432, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@21282fc6, org.springframework.security.web.access.ExceptionTranslationFilter@18182680, org.springframework.security.web.access.intercept.AuthorizationFilter@455805b3]
2024-11-17T15:37:53.190+01:00  INFO 35223 --- [restaurant-service] [main] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2024-11-17T15:37:53.562+01:00  WARN 35223 --- [restaurant-service] [main] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-11-17T15:37:53.723+01:00  INFO 35223 --- [restaurant-service] [main] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2024-11-17T15:37:53.765+01:00  INFO 35223 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2024-11-17T15:37:53.770+01:00  INFO 35223 --- [restaurant-service] [main] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-11-17T15:37:53.797+01:00  INFO 35223 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-11-17T15:37:53.797+01:00  INFO 35223 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-11-17T15:37:53.797+01:00  INFO 35223 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-11-17T15:37:53.798+01:00  INFO 35223 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-11-17T15:37:53.798+01:00  INFO 35223 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-11-17T15:37:53.798+01:00  INFO 35223 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2024-11-17T15:37:53.798+01:00  INFO 35223 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-11-17T15:37:54.021+01:00  INFO 35223 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-11-17T15:37:54.024+01:00  INFO 35223 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2024-11-17T15:37:54.025+01:00  INFO 35223 --- [restaurant-service] [main] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-11-17T15:37:54.029+01:00  INFO 35223 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1731854274029 with initial instances count: 2
2024-11-17T15:37:54.044+01:00  INFO 35223 --- [restaurant-service] [main] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application RESTAURANT-SERVICE with eureka with status UP
2024-11-17T15:37:54.044+01:00  INFO 35223 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1731854274044, current=UP, previous=STARTING]
2024-11-17T15:37:54.046+01:00  INFO 35223 --- [restaurant-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_RESTAURANT-SERVICE/192.168.0.129:restaurant-service: registering service...
2024-11-17T15:37:54.070+01:00  INFO 35223 --- [restaurant-service] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path ''
2024-11-17T15:37:54.078+01:00  INFO 35223 --- [restaurant-service] [main] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 8080
2024-11-17T15:37:54.106+01:00  INFO 35223 --- [restaurant-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_RESTAURANT-SERVICE/192.168.0.129:restaurant-service - registration status: 204
2024-11-17T15:37:54.108+01:00  INFO 35223 --- [restaurant-service] [main] org.restaurant.RestaurantApplication     : Started RestaurantApplication in 10.438 seconds (process running for 11.645)
2024-11-17T15:37:54.110+01:00  INFO 35223 --- [restaurant-service] [scheduling-1] o.r.aspect.PerformanceTrackerHandler     : Execution started: tasks.scheduled.execution
2024-11-17T15:37:54.352+01:00  INFO 35223 --- [restaurant-service] [scheduling-1] o.r.aspect.PerformanceTrackerHandler     : execution stopped tasks.scheduled.executionduration 240
2024-11-17T15:38:21.292+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-11-17T15:38:21.294+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-11-17T15:38:21.299+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 5 ms
2024-11-17T15:38:21.303+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : Execution started: http.server.requests
2024-11-17T15:38:21.323+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.filterchains
2024-11-17T15:38:21.334+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.authorizations
2024-11-17T15:38:21.336+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.authorizationsduration 2
2024-11-17T15:38:21.337+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.filterchainsduration 14
2024-11-17T15:38:21.337+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.http.secured.requests
2024-11-17T15:38:21.401+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : Execution started: create.restaurant
2024-11-17T15:39:10.069+01:00  WARN 35223 --- [restaurant-service] [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=51s928ms).
2024-11-17T15:39:11.216+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : execution stopped create.restaurantduration 49815
2024-11-17T15:39:11.273+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.http.secured.requestsduration 49936
2024-11-17T15:39:11.273+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.filterchains
2024-11-17T15:39:11.274+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.filterchainsduration 1
2024-11-17T15:39:11.275+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : execution stopped http.server.requestsduration 49972
2024-11-17T15:39:46.857+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-2] o.r.aspect.PerformanceTrackerHandler     : Execution started: http.server.requests
2024-11-17T15:39:46.872+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-2] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.filterchains
2024-11-17T15:39:46.875+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-2] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.authorizations
2024-11-17T15:39:46.875+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-2] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.authorizationsduration 0
2024-11-17T15:39:46.877+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-2] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.filterchainsduration 5
2024-11-17T15:39:46.877+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-2] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.http.secured.requests
2024-11-17T15:39:46.926+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-2] o.r.aspect.PerformanceTrackerHandler     : Execution started: get.restaurants
2024-11-17T15:39:46.969+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-2] o.r.aspect.PerformanceTrackerHandler     : execution stopped get.restaurantsduration 42
2024-11-17T15:39:47.091+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-2] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.http.secured.requestsduration 214
2024-11-17T15:39:47.091+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-2] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.filterchains
2024-11-17T15:39:47.091+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-2] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.filterchainsduration 0
2024-11-17T15:39:47.092+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-2] o.r.aspect.PerformanceTrackerHandler     : execution stopped http.server.requestsduration 233
2024-11-17T15:41:43.499+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-4] o.r.aspect.PerformanceTrackerHandler     : Execution started: http.server.requests
2024-11-17T15:41:43.520+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-4] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.filterchains
2024-11-17T15:41:43.523+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-4] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.authorizations
2024-11-17T15:41:43.524+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-4] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.authorizationsduration 1
2024-11-17T15:41:43.525+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-4] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.filterchainsduration 5
2024-11-17T15:41:43.525+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-4] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.http.secured.requests
2024-11-17T15:41:43.537+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-4] o.r.aspect.PerformanceTrackerHandler     : Execution started: get.restaurants
2024-11-17T15:41:43.556+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-4] o.r.aspect.PerformanceTrackerHandler     : execution stopped get.restaurantsduration 19
2024-11-17T15:41:43.605+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-4] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.http.secured.requestsduration 80
2024-11-17T15:41:43.606+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-4] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.filterchains
2024-11-17T15:41:43.609+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-4] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.filterchainsduration 2
2024-11-17T15:41:43.610+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-4] o.r.aspect.PerformanceTrackerHandler     : execution stopped http.server.requestsduration 109
2024-11-17T15:42:53.807+01:00  INFO 35223 --- [restaurant-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-11-17T15:44:18.824+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-7] o.r.aspect.PerformanceTrackerHandler     : Execution started: http.server.requests
2024-11-17T15:44:18.834+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-7] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.filterchains
2024-11-17T15:44:18.835+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-7] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.authorizations
2024-11-17T15:44:18.836+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-7] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.authorizationsduration 1
2024-11-17T15:44:18.837+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-7] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.filterchainsduration 3
2024-11-17T15:44:18.837+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-7] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.http.secured.requests
2024-11-17T15:44:18.857+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-7] o.r.aspect.PerformanceTrackerHandler     : Execution started: get.restaurants
2024-11-17T15:44:18.882+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-7] o.r.aspect.PerformanceTrackerHandler     : execution stopped get.restaurantsduration 24
2024-11-17T15:44:18.935+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-7] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.http.secured.requestsduration 98
2024-11-17T15:44:18.936+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-7] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.filterchains
2024-11-17T15:44:18.937+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-7] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.filterchainsduration 1
2024-11-17T15:44:18.937+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-7] o.r.aspect.PerformanceTrackerHandler     : execution stopped http.server.requestsduration 111
2024-11-17T15:44:59.461+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-6] o.r.aspect.PerformanceTrackerHandler     : Execution started: http.server.requests
2024-11-17T15:44:59.474+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-6] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.filterchains
2024-11-17T15:44:59.476+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-6] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.authorizations
2024-11-17T15:44:59.478+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-6] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.authorizationsduration 1
2024-11-17T15:44:59.478+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-6] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.filterchainsduration 4
2024-11-17T15:44:59.478+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-6] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.http.secured.requests
2024-11-17T15:44:59.488+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-6] o.r.aspect.PerformanceTrackerHandler     : Execution started: get.restaurants
2024-11-17T15:45:19.338+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-6] o.r.aspect.PerformanceTrackerHandler     : execution stopped get.restaurantsduration 19849
2024-11-17T15:45:19.401+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-6] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.http.secured.requestsduration 19923
2024-11-17T15:45:19.402+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-6] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.filterchains
2024-11-17T15:45:19.402+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-6] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.filterchainsduration 0
2024-11-17T15:45:19.403+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-6] o.r.aspect.PerformanceTrackerHandler     : execution stopped http.server.requestsduration 19938
2024-11-17T15:45:21.933+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-8] o.r.aspect.PerformanceTrackerHandler     : Execution started: http.server.requests
2024-11-17T15:45:21.936+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-8] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.filterchains
2024-11-17T15:45:21.937+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-8] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.authorizations
2024-11-17T15:45:21.937+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-8] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.authorizationsduration 0
2024-11-17T15:45:21.937+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-8] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.filterchainsduration 1
2024-11-17T15:45:21.937+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-8] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.http.secured.requests
2024-11-17T15:45:21.941+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-8] o.r.aspect.PerformanceTrackerHandler     : Execution started: get.restaurants
2024-11-17T15:52:17.367+01:00  INFO 35223 --- [restaurant-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-11-17T15:52:17.383+01:00  WARN 35223 --- [restaurant-service] [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=6m58s35ms).
2024-11-17T15:52:17.390+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-8] o.r.aspect.PerformanceTrackerHandler     : execution stopped get.restaurantsduration 415449
2024-11-17T15:52:17.478+01:00  INFO 35223 --- [restaurant-service] [SpringApplicationShutdownHook] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application RESTAURANT-SERVICE with eureka with status DOWN
2024-11-17T15:52:17.479+01:00  INFO 35223 --- [restaurant-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1731855137479, current=DOWN, previous=UP]
2024-11-17T15:52:17.479+01:00  INFO 35223 --- [restaurant-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_RESTAURANT-SERVICE/192.168.0.129:restaurant-service: registering service...
2024-11-17T15:52:17.508+01:00  INFO 35223 --- [restaurant-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_RESTAURANT-SERVICE/192.168.0.129:restaurant-service - registration status: 204
2024-11-17T15:52:17.575+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-8] o.r.aspect.PerformanceTrackerHandler     : Error occurred java.nio.channels.ClosedChannelException
2024-11-17T15:52:17.575+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-8] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.http.secured.requestsduration 415637
2024-11-17T15:52:17.575+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-8] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.filterchains
2024-11-17T15:52:17.575+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-8] o.r.aspect.PerformanceTrackerHandler     : Error occurred java.nio.channels.ClosedChannelException
2024-11-17T15:52:17.575+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-8] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.filterchainsduration 0
2024-11-17T15:52:17.576+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-8] o.r.aspect.PerformanceTrackerHandler     : Error occurred java.nio.channels.ClosedChannelException
2024-11-17T15:52:17.576+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-8] o.r.aspect.PerformanceTrackerHandler     : Error occurred null
2024-11-17T15:52:17.576+01:00  INFO 35223 --- [restaurant-service] [http-nio-8080-exec-8] o.r.aspect.PerformanceTrackerHandler     : execution stopped http.server.requestsduration 415643
2024-11-17T15:52:17.618+01:00  INFO 35223 --- [restaurant-service] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-11-17T15:52:17.622+01:00  INFO 35223 --- [restaurant-service] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-11-17T15:52:17.625+01:00  INFO 35223 --- [restaurant-service] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-11-17T15:52:17.628+01:00  INFO 35223 --- [restaurant-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2024-11-17T15:52:20.640+01:00  INFO 35223 --- [restaurant-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2024-11-17T15:52:20.659+01:00  INFO 35223 --- [restaurant-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_RESTAURANT-SERVICE/192.168.0.129:restaurant-service - deregister  status: 200
2024-11-17T15:52:20.673+01:00  INFO 35223 --- [restaurant-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2024-11-17T15:52:26.255+01:00  INFO 35589 --- [restaurant-service] [main] org.restaurant.RestaurantApplication     : Starting RestaurantApplication using Java 21.0.3 with PID 35589 (/Users/jakubsokol/feasto-app-main/feasto-backend/restaurant/target/classes started by jakubsokol in /Users/jakubsokol/feasto-app-main/feasto-backend)
2024-11-17T15:52:26.257+01:00  INFO 35589 --- [restaurant-service] [main] org.restaurant.RestaurantApplication     : No active profile set, falling back to 1 default profile: "default"
2024-11-17T15:52:27.896+01:00  INFO 35589 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-17T15:52:27.898+01:00  INFO 35589 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2024-11-17T15:52:27.937+01:00  INFO 35589 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.LocationRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-11-17T15:52:27.938+01:00  INFO 35589 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.MenuItemRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-11-17T15:52:27.939+01:00  INFO 35589 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.RatingRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-11-17T15:52:27.940+01:00  INFO 35589 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.RestaurantRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-11-17T15:52:27.941+01:00  INFO 35589 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.UserFavoriteRestaurantRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-11-17T15:52:28.015+01:00  INFO 35589 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 113 ms. Found 1 Elasticsearch repository interface.
2024-11-17T15:52:28.020+01:00  INFO 35589 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-17T15:52:28.020+01:00  INFO 35589 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2024-11-17T15:52:28.025+01:00  INFO 35589 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.LocationRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-11-17T15:52:28.026+01:00  INFO 35589 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.MenuItemRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-11-17T15:52:28.026+01:00  INFO 35589 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.RatingRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-11-17T15:52:28.026+01:00  INFO 35589 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.RestaurantRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-11-17T15:52:28.026+01:00  INFO 35589 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.UserFavoriteRestaurantRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-11-17T15:52:28.029+01:00  INFO 35589 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 8 ms. Found 0 Reactive Elasticsearch repository interfaces.
2024-11-17T15:52:28.035+01:00  INFO 35589 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-17T15:52:28.036+01:00  INFO 35589 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-17T15:52:28.049+01:00  INFO 35589 --- [restaurant-service] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface org.restaurant.repository.elasticsearch.ElasticRestaurantRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-11-17T15:52:28.060+01:00  INFO 35589 --- [restaurant-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 22 ms. Found 5 JPA repository interfaces.
2024-11-17T15:52:28.527+01:00  INFO 35589 --- [restaurant-service] [main] o.s.cloud.context.scope.GenericScope     : BeanFactory id=13877953-4ae2-31cd-942b-2d1b491df221
2024-11-17T15:52:29.162+01:00  WARN 35589 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-11-17T15:52:29.170+01:00  WARN 35589 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T15:52:29.182+01:00  WARN 35589 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T15:52:29.191+01:00  WARN 35589 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T15:52:29.197+01:00  WARN 35589 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T15:52:29.199+01:00  WARN 35589 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x000000012057c7c0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T15:52:29.208+01:00  WARN 35589 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T15:52:29.224+01:00  WARN 35589 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T15:52:29.234+01:00  WARN 35589 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T15:52:29.240+01:00  WARN 35589 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T15:52:29.242+01:00  WARN 35589 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T15:52:29.244+01:00  WARN 35589 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T15:52:29.255+01:00  WARN 35589 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T15:52:29.266+01:00  WARN 35589 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T15:52:29.270+01:00  WARN 35589 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T15:52:29.273+01:00  WARN 35589 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T15:52:29.275+01:00  WARN 35589 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T15:52:29.277+01:00  WARN 35589 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T15:52:29.284+01:00  WARN 35589 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancedRetryFactory' of type [org.springframework.cloud.loadbalancer.blocking.retry.BlockingLoadBalancedRetryFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T15:52:29.289+01:00  WARN 35589 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T15:52:29.297+01:00  WARN 35589 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-11-17T15:52:29.299+01:00  WARN 35589 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T15:52:29.300+01:00  WARN 35589 --- [restaurant-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-11-17T15:52:29.572+01:00  INFO 35589 --- [restaurant-service] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-11-17T15:52:29.582+01:00  INFO 35589 --- [restaurant-service] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-11-17T15:52:29.582+01:00  INFO 35589 --- [restaurant-service] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.18]
2024-11-17T15:52:29.627+01:00  INFO 35589 --- [restaurant-service] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-11-17T15:52:29.627+01:00  INFO 35589 --- [restaurant-service] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3318 ms
2024-11-17T15:52:30.042+01:00  INFO 35589 --- [restaurant-service] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-17T15:52:30.072+01:00  INFO 35589 --- [restaurant-service] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.4.1.Final
2024-11-17T15:52:30.089+01:00  INFO 35589 --- [restaurant-service] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-11-17T15:52:30.198+01:00  INFO 35589 --- [restaurant-service] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-11-17T15:52:30.212+01:00  INFO 35589 --- [restaurant-service] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-11-17T15:52:30.337+01:00  INFO 35589 --- [restaurant-service] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1d5958d3
2024-11-17T15:52:30.338+01:00  INFO 35589 --- [restaurant-service] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-11-17T15:52:30.359+01:00  WARN 35589 --- [restaurant-service] [main] org.hibernate.orm.deprecation            : HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-11-17T15:52:31.633+01:00  INFO 35589 --- [restaurant-service] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-11-17T15:52:31.739+01:00  INFO 35589 --- [restaurant-service] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-11-17T15:52:33.923+01:00  WARN 35589 --- [restaurant-service] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-11-17T15:52:34.018+01:00  WARN 35589 --- [restaurant-service] [main] .s.s.UserDetailsServiceAutoConfiguration : 

Using generated security password: ac0b785d-c3f2-4d89-8290-38b66fae1df0

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2024-11-17T15:52:34.769+01:00  INFO 35589 --- [restaurant-service] [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 25 endpoint(s) beneath base path '/actuator'
2024-11-17T15:52:34.842+01:00  INFO 35589 --- [restaurant-service] [main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@623f27a9, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7d1a1ee9, org.springframework.security.web.context.SecurityContextHolderFilter@75f27234, org.springframework.security.web.header.HeaderWriterFilter@3b6f1227, org.springframework.web.filter.CorsFilter@58d1340e, org.springframework.security.web.authentication.logout.LogoutFilter@7a6cd9e0, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@66f18fa, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6c769cd8, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@24f6375b, org.springframework.security.web.access.ExceptionTranslationFilter@1c4f3b3d, org.springframework.security.web.access.intercept.AuthorizationFilter@698af960]
2024-11-17T15:52:36.363+01:00  INFO 35589 --- [restaurant-service] [main] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2024-11-17T15:52:36.425+01:00  WARN 35589 --- [restaurant-service] [main] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-11-17T15:52:36.539+01:00  INFO 35589 --- [restaurant-service] [main] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2024-11-17T15:52:36.574+01:00  INFO 35589 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2024-11-17T15:52:36.579+01:00  INFO 35589 --- [restaurant-service] [main] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-11-17T15:52:36.598+01:00  INFO 35589 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-11-17T15:52:36.599+01:00  INFO 35589 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-11-17T15:52:36.599+01:00  INFO 35589 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-11-17T15:52:36.600+01:00  INFO 35589 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-11-17T15:52:36.600+01:00  INFO 35589 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-11-17T15:52:36.600+01:00  INFO 35589 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2024-11-17T15:52:36.600+01:00  INFO 35589 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-11-17T15:52:36.834+01:00  INFO 35589 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-11-17T15:52:36.837+01:00  INFO 35589 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2024-11-17T15:52:36.838+01:00  INFO 35589 --- [restaurant-service] [main] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-11-17T15:52:36.843+01:00  INFO 35589 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1731855156842 with initial instances count: 3
2024-11-17T15:52:36.857+01:00  INFO 35589 --- [restaurant-service] [main] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application RESTAURANT-SERVICE with eureka with status UP
2024-11-17T15:52:36.857+01:00  INFO 35589 --- [restaurant-service] [main] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1731855156857, current=UP, previous=STARTING]
2024-11-17T15:52:36.858+01:00  INFO 35589 --- [restaurant-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_RESTAURANT-SERVICE/192.168.0.129:restaurant-service: registering service...
2024-11-17T15:52:36.875+01:00  INFO 35589 --- [restaurant-service] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path ''
2024-11-17T15:52:36.877+01:00  INFO 35589 --- [restaurant-service] [main] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 8080
2024-11-17T15:52:36.915+01:00  INFO 35589 --- [restaurant-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_RESTAURANT-SERVICE/192.168.0.129:restaurant-service - registration status: 204
2024-11-17T15:52:36.921+01:00  INFO 35589 --- [restaurant-service] [main] org.restaurant.RestaurantApplication     : Started RestaurantApplication in 11.348 seconds (process running for 12.255)
2024-11-17T15:52:36.924+01:00  INFO 35589 --- [restaurant-service] [scheduling-1] o.r.aspect.PerformanceTrackerHandler     : Execution started: tasks.scheduled.execution
2024-11-17T15:52:37.023+01:00  INFO 35589 --- [restaurant-service] [scheduling-1] o.r.aspect.PerformanceTrackerHandler     : execution stopped tasks.scheduled.executionduration 98
2024-11-17T15:52:37.306+01:00  INFO 35589 --- [restaurant-service] [RMI TCP Connection(3)-127.0.0.1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-11-17T15:52:37.306+01:00  INFO 35589 --- [restaurant-service] [RMI TCP Connection(3)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-11-17T15:52:37.308+01:00  INFO 35589 --- [restaurant-service] [RMI TCP Connection(3)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2024-11-17T15:53:22.301+01:00  INFO 35589 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : Execution started: http.server.requests
2024-11-17T15:53:22.317+01:00  INFO 35589 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.filterchains
2024-11-17T15:53:22.325+01:00  INFO 35589 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.authorizations
2024-11-17T15:53:22.327+01:00  INFO 35589 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.authorizationsduration 1
2024-11-17T15:53:22.328+01:00  INFO 35589 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.filterchainsduration 11
2024-11-17T15:53:22.328+01:00  INFO 35589 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.http.secured.requests
2024-11-17T15:53:22.393+01:00  INFO 35589 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : Execution started: create.restaurant
2024-11-17T15:53:22.766+01:00  INFO 35589 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : execution stopped create.restaurantduration 373
2024-11-17T15:53:22.796+01:00  INFO 35589 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.http.secured.requestsduration 468
2024-11-17T15:53:22.797+01:00  INFO 35589 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.filterchains
2024-11-17T15:53:22.798+01:00  INFO 35589 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.filterchainsduration 1
2024-11-17T15:53:22.798+01:00  INFO 35589 --- [restaurant-service] [http-nio-8080-exec-1] o.r.aspect.PerformanceTrackerHandler     : execution stopped http.server.requestsduration 496
2024-11-17T15:53:33.037+01:00  INFO 35589 --- [restaurant-service] [http-nio-8080-exec-3] o.r.aspect.PerformanceTrackerHandler     : Execution started: http.server.requests
2024-11-17T15:53:33.046+01:00  INFO 35589 --- [restaurant-service] [http-nio-8080-exec-3] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.filterchains
2024-11-17T15:53:33.048+01:00  INFO 35589 --- [restaurant-service] [http-nio-8080-exec-3] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.authorizations
2024-11-17T15:53:33.049+01:00  INFO 35589 --- [restaurant-service] [http-nio-8080-exec-3] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.authorizationsduration 1
2024-11-17T15:53:33.049+01:00  INFO 35589 --- [restaurant-service] [http-nio-8080-exec-3] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.filterchainsduration 2
2024-11-17T15:53:33.049+01:00  INFO 35589 --- [restaurant-service] [http-nio-8080-exec-3] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.http.secured.requests
2024-11-17T15:53:33.102+01:00  INFO 35589 --- [restaurant-service] [http-nio-8080-exec-3] o.r.aspect.PerformanceTrackerHandler     : Execution started: get.restaurants
2024-11-17T15:53:33.121+01:00  INFO 35589 --- [restaurant-service] [http-nio-8080-exec-3] o.r.aspect.PerformanceTrackerHandler     : execution stopped get.restaurantsduration 19
2024-11-17T15:53:33.177+01:00  INFO 35589 --- [restaurant-service] [http-nio-8080-exec-3] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.http.secured.requestsduration 127
2024-11-17T15:53:33.177+01:00  INFO 35589 --- [restaurant-service] [http-nio-8080-exec-3] o.r.aspect.PerformanceTrackerHandler     : Execution started: spring.security.filterchains
2024-11-17T15:53:33.178+01:00  INFO 35589 --- [restaurant-service] [http-nio-8080-exec-3] o.r.aspect.PerformanceTrackerHandler     : execution stopped spring.security.filterchainsduration 1
2024-11-17T15:53:33.178+01:00  INFO 35589 --- [restaurant-service] [http-nio-8080-exec-3] o.r.aspect.PerformanceTrackerHandler     : execution stopped http.server.requestsduration 139
2024-11-17T15:57:36.582+01:00  INFO 35589 --- [restaurant-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-11-17T16:02:36.595+01:00  INFO 35589 --- [restaurant-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-11-17T16:07:36.607+01:00  INFO 35589 --- [restaurant-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-11-17T16:12:36.621+01:00  INFO 35589 --- [restaurant-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-11-17T16:17:36.644+01:00  INFO 35589 --- [restaurant-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-11-17T16:22:36.657+01:00  INFO 35589 --- [restaurant-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-11-17T16:27:36.665+01:00  INFO 35589 --- [restaurant-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-11-17T16:32:36.675+01:00  INFO 35589 --- [restaurant-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-11-17T16:37:36.693+01:00  INFO 35589 --- [restaurant-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-11-17T16:42:36.700+01:00  INFO 35589 --- [restaurant-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-11-17T16:47:36.716+01:00  INFO 35589 --- [restaurant-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-11-17T16:52:36.734+01:00  INFO 35589 --- [restaurant-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-11-17T16:52:36.906+01:00  INFO 35589 --- [restaurant-service] [scheduling-1] o.r.aspect.PerformanceTrackerHandler     : Execution started: tasks.scheduled.execution
2024-11-17T16:52:37.083+01:00  INFO 35589 --- [restaurant-service] [scheduling-1] o.r.aspect.PerformanceTrackerHandler     : execution stopped tasks.scheduled.executionduration 175
2024-11-17T16:57:36.716+01:00  INFO 35589 --- [restaurant-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-11-17T17:02:36.741+01:00  INFO 35589 --- [restaurant-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-11-17T17:07:36.748+01:00  INFO 35589 --- [restaurant-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
